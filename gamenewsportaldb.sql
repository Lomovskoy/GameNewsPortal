-- phpMyAdmin SQL Dump
-- version 4.5.1
-- http://www.phpmyadmin.net
--
-- Хост: 127.0.0.1
-- Время создания: Дек 04 2017 г., 11:05
-- Версия сервера: 10.1.13-MariaDB
-- Версия PHP: 7.0.8

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- База данных: `gamenewsportaldb`
--

-- --------------------------------------------------------

--
-- Структура таблицы `categories`
--

CREATE TABLE `categories` (
  `id` int(11) NOT NULL COMMENT 'номер категории',
  `name` varchar(255) NOT NULL COMMENT 'название категории',
  `icon` varchar(255) NOT NULL COMMENT 'иконка для ленты навбара'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='таблица категорий для раздела форум';

--
-- Дамп данных таблицы `categories`
--

INSERT INTO `categories` (`id`, `name`, `icon`) VALUES
(1, 'Главная', 'fa fa-home'),
(2, 'Новости', 'fa fa-file-text-o'),
(3, 'Контакты', 'fa fa-phone'),
(4, 'О нас', 'fa fa-address-card-o'),
(5, 'Форум', 'fa fa-book');

-- --------------------------------------------------------

--
-- Структура таблицы `comments`
--

CREATE TABLE `comments` (
  `id` int(11) NOT NULL COMMENT 'номер комментария',
  `id_user` int(11) NOT NULL COMMENT 'номер пользователя',
  `id_post` int(11) NOT NULL COMMENT 'номер темы',
  `public_flag` tinyint(1) NOT NULL COMMENT 'публиковать или нет',
  `description` text NOT NULL COMMENT 'текст комментария'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='таблица для комментариев пльзователей';

--
-- Дамп данных таблицы `comments`
--

INSERT INTO `comments` (`id`, `id_user`, `id_post`, `public_flag`, `description`) VALUES
(3, 6, 1, 1, 'Комменравий пользователя'),
(4, 1, 2, 1, 'Кометарий от главного администратора'),
(5, 2, 3, 1, 'Комментарий от администратора форума'),
(6, 3, 4, 1, 'Комментарий от администратора новостекй'),
(7, 4, 5, 1, 'комметраий от модератора форума'),
(8, 5, 6, 1, 'комментарий от модератора новосей'),
(9, 6, 7, 1, 'Коммпетраий от юзера');

-- --------------------------------------------------------

--
-- Структура таблицы `decoration`
--

CREATE TABLE `decoration` (
  `id` int(11) NOT NULL,
  `categiri_id` int(11) NOT NULL,
  `caption` varchar(255) NOT NULL,
  `description` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='описаине страниц сайта';

--
-- Дамп данных таблицы `decoration`
--

INSERT INTO `decoration` (`id`, `categiri_id`, `caption`, `description`) VALUES
(1, 1, 'Power full - Игровой форум', '<p>Далеко-далеко за словесными горами в стране гласных и согласных живут рыбные тексты. Вдали от всех живут они в буквенных домах на берегу Семантика большого языкового океана. Маленький ручеек Даль журчит по всей стране и обеспечивает ее всеми необходимыми правилами.</p>\r\n\r\n<p>Эта парадигматическая страна, в которой жаренные члены предложения залетают прямо в рот. Даже всемогущая пунктуация не имеет власти над рыбными текстами, ведущими безорфографичный образ жизни. Однажды одна маленькая строчка рыбного текста по имени Lorem ipsum решила выйти в большой мир грамматики.</p>\r\n\r\n<p>Великий Оксмокс предупреждал ее о злых запятых, диких знаках вопроса и коварных точках с запятой, но текст не дал сбить себя с толку. Он собрал семь своих заглавных букв, подпоясал инициал за пояс и пустился в дорогу. Взобравшись на первую вершину курсивных гор, бросил он последний взгляд назад, на силуэт своего родного города Буквоград, на заголовок деревни Алфавит и на подзаголовок своего переулка Строчка.</p>\r\n\r\n<p>Грустный реторический вопрос скатился по его щеке и он продолжил свой путь. По дороге встретил текст рукопись. Она предупредила его: «В моей стране все переписывается по несколько раз. Единственное, что от меня осталось, это приставка «и».</p>\r\n\r\n<p>Возвращайся ты лучше в свою безопасную страну». Не послушавшись рукописи, наш текст продолжил свой путь. Вскоре ему повстречался коварный составитель рекламных текстов, напоивший его языком и речью и заманивший в свое агенство, которое использовало его снова и снова в своих проектах. И если его не переписали, то живет он там до сих пор.</p>'),
(2, 3, 'Контакты', 'Вы можете связаться с нами в любое время, мы принимаем заявки 24 часа по почте, скапу, или через форму отбратной связи. Так же мы принимаем заявки с 9:00 до 18:00 по телефону компании'),
(3, 4, 'О Нас', 'Что такое Lorem Ipsum?\r\nLorem Ipsum - это текст-"рыба", часто используемый в печати и вэб-дизайне. Lorem Ipsum является стандартной "рыбой" для текстов на латинице с начала XVI века. В то время некий безымянный печатник создал большую коллекцию размеров и форм шрифтов, используя Lorem Ipsum для распечатки образцов. Lorem Ipsum не только успешно пережил без заметных изменений пять веков, но и перешагнул в электронный дизайн. Его популяризации в новое время послужили публикация листов Letraset с образцами Lorem Ipsum в 60-х годах и, в более недавнее время, программы электронной вёрстки типа Aldus PageMaker, в шаблонах которых используется Lorem Ipsum.\r\n\r\nПочему он используется?\r\nДавно выяснено, что при оценке дизайна и композиции читаемый текст мешает сосредоточиться. Lorem Ipsum используют потому, что тот обеспечивает более или менее стандартное заполнение шаблона, а также реальное распределение букв и пробелов в абзацах, которое не получается при простой дубликации "Здесь ваш текст.. Здесь ваш текст.. Здесь ваш текст.." Многие программы электронной вёрстки и редакторы HTML используют Lorem Ipsum в качестве текста по умолчанию, так что поиск по ключевым словам "lorem ipsum" сразу показывает, как много веб-страниц всё ещё дожидаются своего настоящего рождения. За прошедшие годы текст Lorem Ipsum получил много версий. Некоторые версии появились по ошибке, некоторые - намеренно (например, юмористические варианты).\r\n\r\n\r\nОткуда он появился?\r\nМногие думают, что Lorem Ipsum - взятый с потолка псевдо-латинский набор слов, но это не совсем так. Его корни уходят в один фрагмент классической латыни 45 года н.э., то есть более двух тысячелетий назад. Ричард МакКлинток, профессор латыни из колледжа Hampden-Sydney, штат Вирджиния, взял одно из самых странных слов в Lorem Ipsum, "consectetur", и занялся его поисками в классической латинской литературе. В результате он нашёл неоспоримый первоисточник Lorem Ipsum в разделах 1.10.32 и 1.10.33 книги "de Finibus Bonorum et Malorum" ("О пределах добра и зла"), написанной Цицероном в 45 году н.э. Этот трактат по теории этики был очень популярен в эпоху Возрождения. Первая строка Lorem Ipsum, "Lorem ipsum dolor sit amet..", происходит от одной из строк в разделе 1.10.32\r\n\r\nКлассический текст Lorem Ipsum, используемый с XVI века, приведён ниже. Также даны разделы 1.10.32 и 1.10.33 "de Finibus Bonorum et Malorum" Цицерона и их английский перевод, сделанный H. Rackham, 1914 год.\r\n\r\nГде его взять?\r\nЕсть много вариантов Lorem Ipsum, но большинство из них имеет не всегда приемлемые модификации, например, юмористические вставки или слова, которые даже отдалённо не напоминают латынь. Если вам нужен Lorem Ipsum для серьёзного проекта, вы наверняка не хотите какой-нибудь шутки, скрытой в середине абзаца. Также все другие известные генераторы Lorem Ipsum используют один и тот же текст, который они просто повторяют, пока не достигнут нужный объём. Это делает предлагаемый здесь генератор единственным настоящим Lorem Ipsum генератором. Он использует словарь из более чем 200 латинских слов, а также набор моделей предложений. В результате сгенерированный Lorem Ipsum выглядит правдоподобно, не имеет повторяющихся абзацей или "невозможных" слов.'),
(4, 2147483647, 'Входя на сайт - вы принимаете правила пользования сайтом.', ' ПОЛЬЗОВАТЕЛЬСКОЕ СОГЛАШЕНИЕ\r\n\r\nг. Город                          «день» месяц годг.\r\n\r\n1. ОБЩИЕ ПОЛОЖЕНИЯ\r\n\r\n1.1. Настоящее Пользовательское соглашение (далее – Соглашение) относится к сайту Интернет-магазина «название интернет-магазина», расположенному по адресу www.адрес интернет-магазина, и ко всем соответствующим сайтам, связанным с сайтом адрес интернет-магазина.\r\n\r\n1.2. Сайт Интернет-магазина «название интернет-магазина» (далее – Сайт) является собственностью название организации, предприятия\r\n\r\n1.3. Настоящее Соглашение регулирует отношения между Администрацией сайта Интернет-магазина « название интернет-магазина»(далее – Администрация сайта) и Пользователем данного Сайта.\r\n\r\n1.4. Администрация сайта оставляет за собой право в любое время изменять, добавлять или удалять пункты настоящего Соглашения без уведомления Пользователя.\r\n\r\n1.5. Продолжение использования Сайта Пользователем означает принятие Соглашения и изменений, внесенных в настоящее Соглашение.\r\n\r\n1.6. Пользователь несет персональную ответственность за проверку настоящего Соглашения на наличие изменений в нем.\r\n\r\n \r\n\r\n2. ОПРЕДЕЛЕНИЯ ТЕРМИНОВ\r\n\r\n \r\n2.1. Перечисленные ниже термины имеют для целей настоящего Соглашения следующее значение:\r\n\r\n2.1.1 «название интернет-магазина» – Интернет-магазин, расположенный на доменном имени www.адрес интернет-магазина, осуществляющий свою деятельность посредством Интернет-ресурса и сопутствующих ему сервисов.\r\n\r\n2.1.2. Интернет-магазин – сайт, содержащий информацию о Товарах, Продавце, позволяющий осуществить выбор, заказ и (или) приобретение Товара.\r\n\r\n2.1.3. Администрация сайта Интернет-магазина – уполномоченные сотрудники на управления Сайтом, действующие от имени название организации.\r\n\r\n2.1.4. Пользователь сайта Интернет-магазина (далее ? Пользователь) – лицо, имеющее доступ к Сайту, посредством сети Интернет и использующее Сайт.\r\n\r\n2.1.5. Содержание сайта Интернет-магазина (далее – Содержание) - охраняемые результаты интеллектуальной деятельности, включая тексты литературных произведений, их названия, предисловия, аннотации, статьи, иллюстрации, обложки, музыкальные произведения с текстом или без текста, графические, текстовые, фотографические, производные, составные и иные произведения, пользовательские интерфейсы, визуальные интерфейсы, названия товарных знаков, логотипы, программы для ЭВМ, базы данных, а также дизайн, структура, выбор, координация, внешний вид, общий стиль и расположение данного Содержания, входящего в состав Сайта и другие объекты интеллектуальной собственности все вместе и/или по отдельности, содержащиеся на сайте Интернет-магазина.\r\n\r\n \r\n\r\n3. ПРЕДМЕТ СОГЛАШЕНИЯ\r\n\r\n \r\n\r\n3.1. Предметом настоящего Соглашения является предоставление Пользователю Интернет-магазина доступа к содержащимся на Сайте Товарам и оказываемым услугам.\r\n\r\n3.1.1. Интернет-магазин предоставляет Пользователю следующие виды услуг (сервисов):\r\n\r\n    доступ к электронному контенту на платной основе, с правом приобретения (скачивания), просмотра контента;\r\n    доступ к средствам поиска и навигации Интернет-магазина;\r\n    предоставление Пользователю возможности размещения сообщений, комментариев, рецензий Пользователей, выставления оценок контенту Интернет-магазина;\r\n    доступ к информации о Товаре и к информации о приобретении Товара на платной основе;\r\n    иные виды услуг (сервисов), реализуемые на страницах Интернет-магазина.\r\n\r\n3.1.2. Под действие настоящего Соглашения подпадают все существующие (реально функционирующие) на данный момент услуги (сервисы) Интернет-магазина, а также любые их последующие модификации и появляющиеся в дальнейшем дополнительные услуги (сервисы) Интернет-магазина.\r\n\r\n3.2. Доступ к Интернет-магазину предоставляется на _________ основе.\r\n\r\n3.3. Настоящее Соглашение является публичной офертой. Получая доступ к Сайту Пользователь считается присоединившимся к настоящему Соглашению.\r\n\r\n3.4. Использование материалов и сервисов Сайта регулируется нормами действующего законодательства Российской Федерации\r\n\r\n \r\n\r\n4. ПРАВА И ОБЯЗАННОСТИ СТОРОН\r\n\r\n \r\n\r\n4.1. Администрация сайта вправе:\r\n\r\n4.1.1. Изменять правила пользования Сайтом, а также изменять содержание данного Сайта. Изменения вступают в силу с момента публикации новой редакции Соглашения на Сайте.\r\n\r\n4.1.2. Ограничить доступ к Сайту в случае нарушения Пользователем условий настоящего Соглашения.\r\n4.1.3. Изменять размер оплаты, взимаемый за предоставление доступа к использованию сайта Интернет-магазина. Изменение стоимости не будет распространяться на Пользователей, имеющих регистрацию к моменту изменения размера оплаты, за исключением случаев, особо оговоренных Администрацией сайта интернет-магазина.\r\n\r\n4.2. Пользователь вправе:\r\n4.2.1. Получить доступ к использованию Сайта после соблюдения требований о регистрации и оплате .\r\n\r\n4.2.2. Пользоваться всеми имеющимися на Сайте услугами, а также приобретать любые Товары, предлагаемые на Сайте.\r\n\r\n4.2.3. Задавать любые вопросы, относящиеся к услугам Интернет-магазина по реквизитам, которые находятся в разделе Сайта «название раздела».\r\n\r\n4.2.4. Пользоваться Сайтом исключительно в целях и порядке, предусмотренных Соглашением и не запрещенных законодательством Российской Федерации.\r\n\r\n4.3. Пользователь Сайта обязуется:\r\n\r\n4.3.1. Предоставлять по запросу Администрации сайта дополнительную информацию, которая имеет непосредственное отношение к предоставляемым услугам данного Сайта.\r\n\r\n4.3.2. Соблюдать имущественные и неимущественные права авторов и иных правообладателей при использовании Сайта.\r\n\r\n4.3.3. Не предпринимать действий, которые могут рассматриваться как нарушающие нормальную работу Сайта.\r\n\r\n4.3.4. Не распространять с использованием Сайта любую конфиденциальную и охраняемую законодательством Российской Федерации информацию о физических либо юридических лицах.\r\n\r\n4.3.5. Избегать любых действий, в результате которых может быть нарушена конфиденциальность охраняемой законодательством Российской Федерации информации.\r\n\r\n4.3.6. Не использовать Сайт для распространения информации рекламного характера, иначе как с согласия Администрации сайта.\r\n\r\n4.3.7. Не использовать сервисы сайта Интернет-магазина с целью:\r\n\r\n4.3.7. 1. загрузки контента, который является незаконным, нарушает любые права третьих лиц; пропагандирует насилие, жестокость, ненависть и (или) дискриминацию по расовому, национальному, половому, религиозному, социальному признакам; содержит недостоверные сведения и (или) оскорбления в адрес конкретных лиц, организаций, органов власти.\r\n\r\n4.3.7. 2. побуждения к совершению противоправных действий, а также содействия лицам, действия которых направлены на нарушение ограничений и запретов, действующих на территории Российской Федерации.\r\n\r\n4.3.7. 3. нарушения прав несовершеннолетних лиц и (или) причинение им вреда в любой форме.\r\n\r\n4.3.7. 4. ущемления прав меньшинств.\r\n\r\n4.3.7. 5. представления себя за другого человека или представителя организации и (или) сообщества без достаточных на то прав, в том числе за сотрудников данного Интернет-магазина.\r\n\r\n4.3.7. 6. введения в заблуждение относительно свойств и характеристик какого-либо Товара из каталога Интернет-магазина, размещенного на Сайте.\r\n\r\n4.3.7. 7. некорректного сравнения Товара, а также формирования негативного отношения к лицам, (не) пользующимся определенными Товарами, или осуждения таких лиц.\r\n\r\n4.4. Пользователю запрещается:\r\n\r\n4.4.1. Использовать любые устройства, программы, процедуры, алгоритмы и методы, автоматические устройства или эквивалентные ручные процессы для доступа, приобретения, копирования или отслеживания содержания Сайта данного Интернет-магазина;\r\n\r\n4.4.2. Нарушать надлежащее функционирование Сайта;\r\n\r\n4.4.3. Любым способом обходить навигационную структуру Сайта для получения или попытки получения любой информации, документов или материалов любыми средствами, которые специально не представлены сервисами данного Сайта;\r\n\r\n4.4.4. Несанкционированный доступ к функциям Сайта, любым другим системам или сетям, относящимся к данному Сайту, а также к любым услугам, предлагаемым на Сайте;\r\n\r\n4.4.4. Нарушать систему безопасности или аутентификации на Сайте или в любой сети, относящейся к Сайту.\r\n\r\n4.4.5. Выполнять обратный поиск, отслеживать или пытаться отслеживать любую информацию о любом другом Пользователе Сайта.\r\n\r\n4.4.6. Использовать Сайт и его Содержание в любых целях, запрещенных законодательством Российской Федерации, а также подстрекать к любой незаконной деятельности или другой деятельности, нарушающей права интернет-магазина или других лиц.\r\n\r\n \r\n\r\n5. ИСПОЛЬЗОВАНИЕ САЙТА ИНТЕРНЕТ-МАГАЗИНА\r\n\r\n \r\n\r\n5.1. Сайт и Содержание, входящее в состав Сайта, принадлежит и управляется Администрацией сайта.\r\n\r\n5.2. Содержание Сайта не может быть скопировано, опубликовано, воспроизведено, передано или распространено любым способом, а также размещено в глобальной сети «Интернет» без предварительного письменного согласия Администрации сайта.\r\n\r\n5.3. Содержание Сайта защищено авторским правом, законодательством о товарных знаках, а также другими правами, связанными с интеллектуальной собственностью, и законодательством о недобросовестной конкуренции.\r\n\r\n5.4. Приобретение Товара, предлагаемого на Сайте, может потребовать создания учётной записи Пользователя.\r\n\r\n5.5. Пользователь несет персональную ответственность за сохранение конфиденциальности информации учётной записи, включая пароль, а также за всю без исключения деятельность, которая ведётся от имени Пользователя учётной записи.\r\n\r\n5.6. Пользователь должен незамедлительно уведомить Администрацию сайта о несанкционированном использовании его учётной записи или пароля или любом другом нарушении системы безопасности.\r\n\r\n5.7. Администрация сайта обладает правом в одностороннем порядке аннулировать учетную запись Пользователя, если она не использовалась более количество месяцев календарных месяцев подряд без уведомления Пользователя.\r\n\r\n5.7. Настоящее Соглашение распространяет свое действия на все дополнительные положения и условия о покупке Товара и оказанию услуг, предоставляемых на Сайте.\r\n\r\n5.8. Информация, размещаемая на Сайте не должна истолковываться как изменение настоящего Соглашения.\r\n\r\n5.9. Администрация сайта имеет право в любое время без уведомления Пользователя вносить изменения в перечень Товаров и услуг, предлагаемых на Сайте, и (или) в цены, применимые к таким Товарам по их реализации и (или) оказываемым услугам Интернет-магазином.\r\n\r\n5.10. Документы, указанные в пунктах 5.10.1 - 5.10.4 настоящего Соглашения регулируют в соответствующей части и распространяют свое действие на использование Пользователем Сайта. В настоящее Соглашение включены следующие документы:\r\n\r\n5.10.1. Политика конфиденциальности;\r\n\r\n5.10.2. Договор купли-продажи товаров дистанционным способом;\r\n\r\n5.10.3. Заявка на оформление заказа;\r\n\r\n5.10.4. Предложения и замечания.\r\n\r\n5.11. Любой из документов, перечисленных в пункте 5.10. настоящего Соглашения может подлежать обновлению. Изменения вступают в силу с момента их опубликования на Сайте.\r\n\r\n \r\n\r\n6. ОТВЕТСТВЕННОСТЬ\r\n\r\n \r\n\r\n6.1. Любые убытки, которые Пользователь может понести в случае умышленного или неосторожного нарушения любого положения настоящего Соглашения, а также вследствие несанкционированного доступа к коммуникациям другого Пользователя, Администрацией сайта не возмещаются.\r\n\r\n6.2. Администрация сайта не несет ответственности за:\r\n\r\n6.2.1. Задержки или сбои в процессе совершения операции, возникшие вследствие непреодолимой силы, а также любого случая неполадок в телекоммуникационных, компьютерных, электрических и иных смежных системах.\r\n\r\n6.2.2. Действия систем переводов, банков, платежных систем и за задержки связанные с их работой.\r\n\r\n6.2.3. Надлежащее функционирование Сайта, в случае, если Пользователь не имеет необходимых технических средств для его использования, а также не несет никаких обязательств по обеспечению пользователей такими средствами.\r\n\r\n \r\n\r\n7. НАРУШЕНИЕ УСЛОВИЙ ПОЛЬЗОВАТЕЛЬСКОГО СОГЛАШЕНИЯ\r\n\r\n \r\n\r\n7.1. Администрация сайта вправе раскрыть любую собранную о Пользователе данного Сайта информацию, если раскрытие необходимо в связи с расследованием или жалобой в отношении неправомерного использования Сайта либо для установления (идентификации) Пользователя, который может нарушать или вмешиваться в права Администрации сайта или в права других Пользователей Сайта.\r\n\r\n7.2. Администрация сайта имеет право раскрыть любую информацию о Пользователе, которую посчитает необходимой для выполнения положений действующего законодательства или судебных решений, обеспечения выполнения условий настоящего Соглашения, защиты прав или безопасности название организации, Пользователей.\r\n\r\n7.3. Администрация сайта имеет право раскрыть информацию о Пользователе, если действующее законодательство Российской Федерации требует или разрешает такое раскрытие.\r\n\r\n7.4. Администрация сайта вправе без предварительного уведомления Пользователя прекратить и (или) заблокировать доступ к Сайту, если Пользователь нарушил настоящее Соглашение или содержащиеся в иных документах условия пользования Сайтом, а также в случае прекращения действия Сайта либо по причине технической неполадки или проблемы.\r\n\r\n7.5. Администрация сайта не несет ответственности перед Пользователем или третьими лицами за прекращение доступа к Сайту в случае нарушения Пользователем любого положения настоящего Соглашения или иного документа, содержащего условия пользования Сайтом.\r\n\r\n \r\n\r\n8. РАЗРЕШЕНИЕ СПОРОВ\r\n\r\n \r\n\r\n8.1. В случае возникновения любых разногласий или споров между Сторонами настоящего Соглашения обязательным условием до обращения в суд является предъявление претензии (письменного предложения о добровольном урегулировании спора).\r\n\r\n8.2. Получатель претензии в течение 30 календарных дней со дня ее получения, письменно уведомляет заявителя претензии о результатах рассмотрения претензии.\r\n\r\n8.3. При невозможности разрешить спор в добровольном порядке любая из Сторон вправе обратиться в суд за защитой своих прав, которые предоставлены им действующим законодательством Российской Федерации.\r\n\r\n8.4. Любой иск в отношении условий использования Сайта должен быть предъявлен в течение срок после возникновения оснований для иска, за исключением защиты авторских прав на охраняемые в соответствии с законодательством материалы Сайта. При нарушении условий данного пункта любой иск или основания для иска погашаются исковой давностью.\r\n\r\n \r\n\r\n9. ДОПОЛНИТЕЛЬНЫЕ УСЛОВИЯ\r\n\r\n9.1. Администрация сайта не принимает встречные предложения от Пользователя относительно изменений настоящего Пользовательского соглашения.\r\n\r\n9.2. Отзывы Пользователя, размещенные на Сайте, не являются конфиденциальной информацией и могут быть использованы Администрацией сайта без ограничений.');

-- --------------------------------------------------------

--
-- Структура таблицы `likes_comment`
--

CREATE TABLE `likes_comment` (
  `id_user` int(11) NOT NULL COMMENT 'Номер пользователя',
  `id_comment` int(11) NOT NULL COMMENT 'Номер поста'
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Дамп данных таблицы `likes_comment`
--

INSERT INTO `likes_comment` (`id_user`, `id_comment`) VALUES
(1, 3),
(1, 5),
(1, 7),
(1, 9),
(2, 3),
(2, 7),
(3, 3),
(3, 7),
(4, 5),
(4, 8),
(5, 4),
(5, 8),
(6, 3),
(6, 6);

-- --------------------------------------------------------

--
-- Структура таблицы `likes_post`
--

CREATE TABLE `likes_post` (
  `id_user` int(11) NOT NULL COMMENT 'номер пользователя',
  `id_post` int(11) NOT NULL COMMENT 'номер записи'
) ENGINE=InnoDB DEFAULT CHARSET=utf32 COMMENT='Таблица для лайков записей и постов';

--
-- Дамп данных таблицы `likes_post`
--

INSERT INTO `likes_post` (`id_user`, `id_post`) VALUES
(1, 1),
(1, 2),
(1, 4),
(1, 6),
(2, 2),
(2, 4),
(2, 6),
(3, 1),
(3, 3),
(3, 6),
(4, 1),
(4, 4),
(4, 7),
(5, 3),
(5, 6),
(5, 7),
(6, 3),
(6, 4),
(6, 5),
(6, 7);

-- --------------------------------------------------------

--
-- Структура таблицы `post_or_news`
--

CREATE TABLE `post_or_news` (
  `id` int(11) NOT NULL COMMENT 'номер новости',
  `id_user` int(11) NOT NULL COMMENT 'номер публикующего',
  `section` int(11) NOT NULL COMMENT 'подраздел котегории',
  `public_flag` tinyint(1) NOT NULL COMMENT 'публиковать или нет',
  `news_or_forum` tinyint(1) NOT NULL COMMENT 'Или пост или новость',
  `caption` varchar(255) NOT NULL COMMENT 'заголовок новости',
  `description` text CHARACTER SET utf8 COLLATE utf8_german2_ci NOT NULL COMMENT 'текст новости',
  `image` varchar(255) NOT NULL COMMENT 'картинка',
  `date` datetime NOT NULL COMMENT 'Дата публикации'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Таблица содержащая новости';

--
-- Дамп данных таблицы `post_or_news`
--

INSERT INTO `post_or_news` (`id`, `id_user`, `section`, `public_flag`, `news_or_forum`, `caption`, `description`, `image`, `date`) VALUES
(8, 1, 2, 1, 0, 'На международно конференции: представили новый И.И.', '<p>DeepMind, британское подразделение корпорации Google, представило новый искусственный интеллект WaveNet для синтеза человеческой речи. Об этом пишет Business Insider.</p>\r\n\r\n<p>В своём блоге DeepMind опубликовал примеры аудиозаписей, где WaveNet «говорит» на английском и китайском языках. По словам разработчиков, 50% прослушавших аудиозаписи добровольцев не догадались, что их сгенерировала машина. Таким образом, WaveNet «сократил разрыв между уровнем техники и человеческим уровнем более чем на 50%».</p>\r\n\r\n<p>В отличии от популярных TTS-программ, которые синтезируют речь из фрагментов записей человеческого голоса, программа WaveNet воспроизводит непосредственно звуковые волны, анализируя их с помощью нейронных сетей. Эта технология позволяет программе имитировать не только речь, но и музыку. DeepMind опубликовал в блоге музыкальные отрывки, которые WaveNet смогла воспроизвести после изучения сольной фортепианной музыки на YouTube.</p>\r\n\r\n<p>«Это серьёзный прорыв для систем преобразования текста в речь, который можно потенциально использовать везде — от смартфонов до большого экрана», — говорит разработчик DeepMind Аарон ван ден Ооорд. В систему уже загрузили более 44 часов речи на английском языке. В записи примеров для обучения поучаствовали 109 добровольцев-носителей английского языка. Каждую секунду WaveNet обрабатывает 16000 образцов аудио.</p>\r\n\r\n<p>Подробно о технологии можно прочитать тут.</p>\r\n\r\n<p>Недавно специалисты из Стэнфордского университета, Университета штата Вашингтон и сотрудники Baidu протестировали алгоритм распознавания речи Deep Speech 2. Оказалось, что он распознаёт и преобразует голосовые сообщения в текст в три раза быстрее, чем люди.</p>', '1.jpg', '2017-10-19 12:25:10'),
(9, 3, 1, 1, 0, 'Скайрим всё ещё жив - виртуальная реальность VR', '<p>На пресс-конференции Sony в рамках выставки E3 2017 состоялся анонс TES: Skyrim VR.</p>\r\n\r\n<p>Игра The Elder Scrolls V: Skyrim VR была представлена как один из проектов, которые будут доступны для шлема виртуальной реальности PlayStation VR.</p>\r\n\r\n<p>VR-режим включает в себя не только всю оригинальную TES: Skyrim, но и дополнения Dawnguard, Hearthfire, и Dragonborn. При этом пока неизвестно, нужно ли будет приобретать игру отдельно или режим виртуальной реальности будет доступен в качестве обновления.</p>\r\n\r\n<p>На выставке E3 2017 компания Bethesda также представила VR-игры по мотивам своих хитов DOOM и Fallout 4.</p>', '2.jpg', '2017-10-20 22:44:20'),
(10, 5, 2, 1, 0, 'Microsoft - представила новый язык программирования', '<p>Когда в 1976 году вышел MITS Altair 8800, который считается первым в мире ПК для обычного домашнего пользователя, у Microsoft уже был готов интерпретатор языка программирования BASIC для него. И теперь софтверный гигант хочет быть в равной степени готовым, когда наступит эра квантовых вычислений и появятся первые квантовые ПК для массового потребителя. На ежегодной конференции Microsoft Ignite компания объявила о разработке нового языка программирования, который уже интегрирован в Visual Studio и оптимизирован для использования с масштабируемыми квантовыми компьютерами.</p>\r\n\r\n\r\n<p>Для работы с этим языком потребуется иметь представление о кубитах и других сложных терминах и процессах, связанных с квантовыми вычислениями, но Microsoft стремится максимально упростить выполнение основных вычислений на машинах с принципиально новой архитектурой путем реализации поддержки обычных языков вроде C# и Python.</p>\r\n\r\n\r\n<p>О статусе нового языка говорит тот факт, что у него пока даже нет собственного имени. По сути, Microsoft разрабатывает язык программирования для несуществующих компьютеров будущего.</p>\r\n\r\n\r\n<p>Квантовые вычисления – тема очень сложная и даже выпущенные ранее IBM учебные материалы для новичков, написанные пионером в области квантовых вычислений Чарльзом Беннетом, здесь особыми помощниками не станут. Билл Гейтс, обсуждая новые инициативы Microsoft, сказал, что для него квантовая физика как «иероглифы» (в смысле, ничего непонятно). Сатья Наделла, когда его попросили описать проект одним предложением, ответил, что «хотел бы, но не может».</p>\r\n\r\n\r\n<p>Не вдаваясь в технические подробности, интересные и понятные только тем, кто активно занимается либо интересуется темой квантовых вычислений, отметим, что именно квантовые компьютеры, помогут человечеству найти ответы на фундаментальные научные вопросы и решить глобальные проблемы в различных отраслях, в том числе и в медицине.</p>\r\n\r\n\r\n<p>«Они (квантовые ПК) позволят ученым выполнять вычисления, с которыми обычные суперкомпьютеры не управились бы за все время существования Вселенной, в считанные минуты или часы», – объясняет Microsoft.</p>\r\n\r\n\r\n<p>В основе проекта лежат наработки талантливого исследователя-теоретика Microsoft Майкла Фридмена, посвятившего годы изучению программных и аппаратных аспектов «топологического квантового компьютера». В команде Фридмана есть «несколько выдающихся физиков, специализирующихся в области конденсированных сред, физиков-теоретиков, математиков и программистов».</p>\r\n\r\n\r\n<p>Microsoft уже 12 лет инвестирует значительные средства в создание масштабируемого квантового компьютера. Сообщается, что аппаратной частью компьютера Microsoft тоже занимается, но, похоже, приоритет все же отдается именно программной стороне. В компании рассчитывают, что разработанные ею инструменты для разработчиков и исследователей помогут ускорить разработку соответствующих алгоритмов, использующих преимущества квантовых компьютеров.</p>\r\n\r\n\r\n<p>Все инструменты будут доступны бесплатно в конце 2017 года. Желающие разработчики могут присоединиться к сообществу по ссылке: www.microsoft.com/quantum.</p>\r\n\r\n\r\n<p>Здесь уместно вспомнить, что в начале этого года IBM представила свой самый производительный квантовый компьютер, состоящий из 17 кубитов. А незадолго до этого голубой гигант пообещал выпустить первый коммерческий квантовый компьютер в ближайшие пять лет.</p>', '3.jpg', '2017-10-21 03:20:30'),
(11, 1, 1, 1, 0, 'Hellblade - вывела Инди игры на новый уровень', '<p>Hellblade: Senua''s Sacrifice – это инди – игра - ААА-класса от разработчиков британской студии Ninja Theory, которая позиционирует себя к Action/Adventure. Действие данной игры происходит, в сетинге скандинавкой мифологии, во времена раннего средневековья. Главным протагонистом здесь выступает кельтская воительница по имени Сенуа. По сюжету Сенуа отправляется в мир мертвых, так называемый Хельхейм, дабы спасти душу своего возлюбленного Диллиана и это не так просто, как кажется на первый взгляд. Дело в том, что у Сенуи тяжелое психическое расстройство, которое проявляется в виде постоянно звучащих голосов в её голове, в совокупности с тяжелыми приступами галлюцинаций. Она, зачастую, едва может отличить реальность от вымысла и походу истории пробирается к Диллиану, через свои же собственные материализованные страхи.</p>\r\n\r\n<p>Гемплей: Hellblade, как я писал выше, позиционирует себя как Action, или как сплешер, с элементами разгадывания загадок. Гемплей в игре можно условно поделить, аж на 3 элемента: Бои, загадки и ходьба. Разберем их по подробнее…\r\n1) Скажу сразу, в данной игре боевка носит сугубо концептуальный характер. Так что, ради боев игру приобретать не стоит. Да, игра не об этом… Сама боевка же в игре довольно стандартная, есть легкий удар, тяжелый удар, уворот и блоки. Так же Сенуа может концентрироваться на врагах, что замедляет время и дает возможность нанести целый шквал ударов по противнику. По началу бой не вызывают удивления, но по ходу прохождения появляются новый типы противников и их количество в бою возрастает, добавить к этому очень маленькие локации для боев, и всё это делает бои довольно напряжёнными.\r\n2) Загадки в игре, представленный в виде поисков силуэтов, под правильным углом, рун расположенных на дверях. В принципе загадки здесь довольно условные, вы чуть ли не сразу поймете, где данный силуэт и под каким углом надо на него смотреть.\r\n3) Ну и конечно же, краеугольный камень, это ходьба… Дело в том, что Сенуа двигается довольно медленно. Оооочеееень меееедленно, а в этой игре вам понадобиться, ооооочень много ходить. Только на решение самых первых загадок по поиску силуэтов рун, вы уже в наматаете кругов 20 по всей локации. Ну дальше вы сами понимаете… Игра в этом плане, вообще походит на какой-то симулятор ходьбы с элементом сплешера…</p>\r\n\r\n<p>Плюсы: Интересная, хорошо прописанная главная героиня и прекрасная передача её эмоций игроку. Графика в Hellblade выполнена, на довольно высоком уровне, добавить к этому не плохой левел дизайн и получим очень красивую картинку. Звуковая составляющая в игре тоже не отстает. Здесь не плохой саундтрек играющий на атмосферу и, конечно же, бинауральная или объемная запись звука, что дает не плохой эффект присутствия. Голоса которая слышит Сенуа, в буквальном смысле звучит в вашей голове, что не плохо так погружает вас в происходящее на экране. Все это, дает вам прочувствовать то, что ощущает Сенуа. Её страхи, кошмары и переживания, отражаются на вас. Если, конечно вы склоны к эмпатии. Если же нет, то это игра, явно, не для вас.</p>\r\n\r\n<p>Минусы: Гемплей, вернее только загадки и ходьба. Игра сильно растянута, что иногда сбивает темп повествования. Субтитры в этой игре – это тихий ужас. Основной голос рассказчика, говорит одно, в субтитрах речь идет вообще о другом. Плюс, субтитры иногда запаздывают и появляются на середине звуковой дорожки, или наоборот спойлерат следующую реплику, так секунд за 10 до того как вы услышите фразу. Субтитры голосов в голове Сенуи, да у них тоже есть субтитры, вот тут просто п****ц. Тут такая, штука, Сенуа слышит одновременно, как минимум 4-5 голосов, которые бываю еще и спорят между собой, субтитры вывели мне 1 строчку с очень приблизительным смыслом, убивая тем самым, смысл наличие этих голосов. Учитывая, что голос рассказчика говорит одновременно с голосами из головы Сенуа, то представьте себе субтитры по всему экрану. У меня первые полчаса был когнитивный шок от этих субтитров, пока я не выключил их к ч е р т о в о й матери. Так что, если хотите поиграть, то лучше без субтитров, но вам понадобиться понимание английского языка.</p>\r\n\r\n<p>Вывод: Hellblade: Senua''s Sacrifice – это самобытный и уникальный в своем роде проект. Она понравится далеко не всем. Что, касается меня, мне игра смогла принести удовольствие, не смотря на хромающий, по всем фронтам, гемплей. Атмосфера, картинка и звуковое сопровождение, прекрасно, делают свое дело, погружая вас темный, одинокий наполненный страхами и кошмарами мир Сенуи.</p>\r\n<p>Еще раз упомяну. Это игра понравиться далеко не всем. Я приобрел её прекрасно зная, что Hellblade из себя представляет и что она может мне дать. Так что, если хотите купить её, то на своё страх и риск.</p>\r\n\r\n<p>Оценку ставить ей, я не буду, ибо в этом плане, я крайне не компетентен.</p>\r\n\r\n<p>P.S. Обязательно играйте в наушниках и с выключенными субтитрами.</p>', '4.jpg', '2017-10-20 02:12:40'),
(12, 3, 1, 1, 0, '10 самый продаваемых игр 2017 года', 'Пол года прошло с начала 2017, а значит, можно поговорить о том, какие игры за этот период успели «выбиться» в топы продаж. Такие релизы, как NieR: Automata или Horizon: Zero Dawn сделали этот год успешным. Но многие геймеры до сих пор с радостью покупают «старые» игры. Ярким примером в данной ситуации послужит Grand Theft Auto V, который вышел ещё в 2013 году. Симулятор преступности в открытом мире до сих пор занимает высокие позиции в чартах продаж по всему миру. Аналитики решили узнать, какие продукты были самыми популярными с начала этого года. Вот как выглядит список самых продаваемых проектов на всех платформах по всему миру: 1. Tom Clancy’s Ghost Recon: Wildlands 2. The Legend of Zelda: Breath of the Wild 3. For Honor 4. Grand Theft Auto V 5. Horizon Zero Dawn 6. Injustice 2 7. Mass Effect: Andromeda 8. Resident Evil 7: Biohazard 9. NBA 2K17 10. Call of Duty: Infinite Warfare Ghost Recon: Wildlands, как и ожидалось, стал самой продаваемой игрой года. Как минимум, пока что. Об этом сообщали и сами представители Ubisoft. Интересно, как долго история о борьбе с боливийскими наркокартелями будет держаться в ТОПе? После релизной волны хайпа, популярность игры слегка упала и даже выход DLC не особо помог исправить ситуацию. The Legend of Zelda: Breath of the Wild на удивление многих смогла выбраться аж к серебру. Примечательно и то, что это единственная игра из ТОПа, которая не продавалась в цифровом виде. Отдельного внимания стоит титан GTA V, ведь за 2017 год этой игре удалось обогнать Horizon, ME: Andromeda и RE7. Если случай с Horizon можно списать на эсклюзивность для PS4, то многоплатформенность других продуктов говорит о невероятной популярности творения Rockstar. Похоже, что к концу года компания Ubisoft будет доминировать в чартах продаж. Этому поспособствуют дополнительные продажи уже вышедших игр и выход таких ААА-проектов, как Assassin’s Creed: Origins и Far Cry 5. Их геймеры точно не обойдут стороной. https://leogaming.net/ru/site/news/top-10-samih-popularnih-igr-2017\r\n© LeoGaming', '5.jpg', '2017-10-21 05:31:50'),
(13, 5, 3, 1, 0, 'Чего ждать от нового поколения консолей', '<p>Свидетелями нового витка войны игровых консолей мы с вами станем уже в самое ближайшее время. Microsoft побрякивает саблей под названием «Scorpio», а Sony уже грозно покачивает дубиной под названием «Neo». Кроме того, на заднем плане виднеется готовая к бою пушка «NX» от компании Nintendo. Поле битвы готово, а мы окидываем взглядом возможности этих крупнейших конкурентов.\r\nPS4 Neo против Xbox Scorpio: опять одинаковый подход?</p>\r\n<p>Мы помним, что когда Microsoft и Sony представили свои новые консоли в 2013 году, различия между ними оказались ничтожно маленькими. Обе приставки — PlayStation 4 и Xbox One — имели аппаратную базу от компании AMD на архитектуре X86, располагали Blu-ray-дисководами и заложили основу рынка игр в разрешении Full HD.</p>\r\n\r\n<p>В конце концов, победу одержала PS4 и в настоящее время именно она получила наиболее широкое распространение по всему миру в качестве консоли актуального поколения.</p>\r\n\r\n<p>В дуэли между PlayStation 4 Neo и Xbox One «Scorpio», правда, победителя нам выявить так и не удалось, зато были отмечены две тенденции. В пользу PS4 Neo говорит тот факт, что эта консоль с большой долей вероятности появится на рынке намного раньше конкурентов — возможно, уже даже в конце этого года. Хороший аргумент для блицкрига.</p>\r\n\r\n<p>Привлекательным моментом в Xbox Scorpio должна стать потенциально более высокая производительность. В первых слухах о приставках говорится о вычислительной мощности на уровне 6 терафлопс у Scorpio и 4,2 терафлопс у PS4 Neo. Таким образом, покупатели продукции Microsoft получат заметно более мощное устройство.</p>\r\n\r\n<p>Принципиально Xbox Scorpio и PS4 Neo не являются консолями «нового поколения», как это было в 2013 году. По сути Scorpio и Neo — лишь улучшенное актуальное поколение, которое отдает должное растущему рынку больших телевизоров с разрешением 4К и технике будущего — устройствам виртуальной реальности.</p>\r\n\r\n<p>Означает ли это также, что мы сможем играть на этих консолях с разрешением 4К на скорости 60 кадров в секунду (fps)? На данный момент такая возможность подтверждена только для Xbox Scorpio.\r\nОценка: нужна ли вам новая консоль?</p>\r\n\r\n<p>Еще до того, как будут озвучены официальные даты релизов, задайте себе вопрос: должны ли вы ждать эти новые консоли? Если у вас нет приставки актуального поколения, то ожидание будет оправдано лишь в том случае, если вы имеете большой телевизор с поддержкой формата 4К и предпочитаете играть на максимальном разрешении.</p>\r\n\r\n<p>Также фанаты виртуальной реальности — PlayStation VR в случае с PS4 и Oculus Rift в случае с Xbox One — с новыми консолями получат важную прибавку производительности. Те из вас, для кого достаточно разрешения Full HD и фильмы в формате 4К не играют никакой роли, в Scorpio и Neo не нуждаются.</p>\r\n\r\n<p>На Е3 компания Microsoft ясно дала понять, что использование Scorpio в разрешении Full HD вряд ли имеет какой-то смысл и в лучшем случае лишь увеличит количество отображаемых кадров в секунду. Разумеется, такое преимущество не сможет оправдать высокую стоимость новой консоли.</p>\r\n\r\n<p>Некоторые геймеры теперь задаются вопросом: относится ли моя приставка (не важно — PS4 или Xbox One) к «старому железу»? По большей части ответ можно считать отрицательным, так как ни Sony, ни Microsoft не хотят прекращать поддержку существующих моделей.</p>\r\n\r\n<p>Новые игры разрабатываются для базовых консолей. Разумеется, могут появиться и адаптированные версии игр для этих новинок, которые, возможно, будут выглядеть чуть лучше или запустятся с более высоким показателем fps. Тот, кто все-таки захочет «пересесть» на новую модель, сможет оставить свои прежние периферийные устройства. Скорее всего, контроллеры, гарнитуры и рули останутся совместимыми с новыми Xbox Scorpio и PS4 Neo.</p>\r\n\r\n<p>Есть отдельный случай для тех, кто присматривается к покупке Xbox One. Своего рода «промежуточная версия» появится на рынке уже через несколько недель. Xbox One S будет меньше, лучше оснащенной и более гибкой в эксплуатации, чем ее родственная модель Xbox One. Кроме того, стоимость приставки обещает быть тоже очень привлекательной. Xbox One S выйдет на рынок в начале августа 2016 года и будет стоить около 300 евро.\r\nNintendo NX: пока двое спорят…\r\nE3 показывает: даже при всех дискуссиях вокруг кинематографичной графики, увлекательного гейминга в разрешении 4К и виртуальной реальности, компания Nintendo смогла привлечь большое внимание, потому что «Zelda: Breath of the Wild» показалась одинаково убедительной как фанатам-геймерам, так и представителям специализированной прессы.</p>\r\n\r\n<p>Как известно, новая часть приключенческой «Зельды» должна выйти именно на Nintendo NX, консоли нового поколения от культового производителя. На данный момент про NX практически ничего не известно — кроме того, что эта приставка действительно готовится к выпуску и появится на прилавках магазинов предположительно в марте 2017 года.</p>\r\n\r\n<p>Официальная презентация консоли неизбежна — мы рассчитываем, что задолго до Рождества компания Nintendo познакомит нас со всеми подробностями.</p>\r\n\r\n<p>Сможет ли Nintendo выиграть от спора конкурентов, когда Microsoft и Sony стараются превзойти друг друга в числе терафлопс? Возможно, если поверить первым неофициальным высказываниям на эту тему. Так, например, компания Ubisoft утверждает, что NX «вернет потерянных игроков Wii».</p>\r\n\r\n<p>Каким именно способом — французский издатель не уточняет. Помимо чистой производительности мы ожидаем от NX новой консольной концепции. Тогда и только тогда компания Nintendo сможет принять участие в борьбе за первенство на рынке игровых приставок.</p>', '6.jpg', '2017-10-22 03:33:30'),
(14, 1, 3, 1, 0, 'Samsung представилиь новый "вечный" тип RRAM памяти', '<p>Накануне исследователи из компании Samsung Electronics и Университета Седжонг в Южной Кореи представили новый тип памяти RRAM, который обладает наилучшими характеристиками других форматов, а кроме того "почти готов" к коммерциализации.</p>\r\n<p>Flash-память на сегодня доминирует на рынке энергонезависимой памяти, присутствуя как в USB-накопителях, так и в SSD. Однако, несмотря на популярность этого формата, дальнейших резервов по его совершенствованию остается немного. По прогнозу экспертов, при снижении технологической нормы производства чипов до размеров менее 30-нм, здесь возможны проблемы. Так как ячейки станут слишком маленькими, будущая память уже не сможет обеспечить большой запас циклов записи/чтения, да и высокими скоростями доступа к информации она тоже не будет отличаться.</p>\r\n\r\n<p>Технически, для преодоления этих проблем существуют другие форматы памяти, такие как Phase-Change RAM (PRAM), Ferroelectric RAM (FERAM), Magnetoresistive RAM (MRAM) или Resistance-change RAM (RRAM). Главные недостаток всех этих форматов заключается в том, что они пока все находятся в стадии разработки и не вышли на коммерческий рынок.</p>\r\n\r\n<p>Накануне исследователи из компании Samsung Electronics и Университета Седжонг в Южной Кореи представили новый тип памяти RRAM, который обладает наилучшими характеристиками других форматов, а кроме того "почти готов" к коммерциализации.</p>\r\n\r\n<p>Новая система чипов базируется на таком нетипичном элементе для современной схемотехники, как оксид тантала. По своим свойствам и характеристикам оксид тантала близок, но не идентичен кремнию. Новые чипы имеют такую структуру, что оксид тантала, являющийся в обычном случае плохо проводимым материалом, становится материалом с низким сопротивлением. Добиться подобного трюка Samsung и корейским ученым удалось благодаря применению слоеной структуры чипа, когда сочетаются соединения Ta2O5 и TaO2, один из которых выступает в виде проводника, а второй - изолятора. Созданную систему разработчики называют MIMB или metal-insulator-base-metal.</p>\r\n\r\n<p>Авторы новой технологии говорят, особенности проводимости оксидов тантала в современной науке пока недостаточно хорошо изучены, но, тем не менее, они работают. Одним из главных преимуществ нового материала исследователи называют возможность плотного размещения ячеек памяти. Также новые чипы позволяют производить достаточно быстрый доступ к данным, сохраняя их без доступа электричества. На практике это означает, что будущие танталовые RRAM-чипы можно будет использовать как для хранения, так и для оперативного доступа к данным.</p>\r\n\r\n<p>На сегодня корейские специалисты говорят, что ими уже разработаны прототипы новых устройств хранения, правда они пока способны хранить всего 64 бита информации.</p>\r\n', '7.jpg', '2017-10-22 09:44:20'),
(15, 3, 2, 1, 0, 'VALVE представили новый сервис Direct в Staem', '<p>Valve закрыла Steam Greenlight — сервис, в котором пользователи голосовали за появление в магазине игр независимых разработчиков. Компания запустит его замену, Steam Direct, 13 июня.</p>\r\n\r\n<p>В Steam Greenlight разработчики больше не могут подавать заявки, а пользователи — голосовать. Около 3,4 тыс. проектов по-прежнему находятся в режиме ожидания. Valve просит пользователей потерпеть, пока она самостоятельно не рассмотрит каждую игру и не решит, какие из них должны попасть в Steam.</p>\r\n\r\n<p>Любой разработчик может запросить возврат стодолларового взноса, если не успел представить ни одной игры или Valve не дала проекту зелёный свет.</p>\r\n\r\n<p>«Наша цель — пропустить через Greenlight как можно больше оставшихся игр, в которых мы уверены, — заявил представитель Valve Олден Кролл (Alden Kroll). — Есть проекты, которым мы не дадим зелёный свет: это может быть связано с недостатком данных участников голосования или их обеспокоенностью касательно игры. Проекты, которые в конечном итоге не пройдут, всё ещё можно будет запустить через Steam Direct, если они будут отвечать нашим основным критериям легальности и уместности».</p>\r\n\r\n<p>В феврале Valve объявила, что заменит Steam Greenlight более простой системой. Инди-разработчикам больше не придётся ждать, пока фанаты проголосуют за их игры. По словам компании, авторы игр жаловались на размытость процесса одобрения проектов в Greenlight.</p>\r\n\r\n<p>Valve добавила, что с момента запуска программы в августе 2012 года примерно 10 миллионов пользователей Steam проголосовали более 90 миллионов раз.</p>\r\n\r\n<p>В рамках Steam Direct разработчику достаточно будет заполнить формы и один раз заплатить $100. Компания вернёт взнос, если игра продастся на сумму более $1 тысячи. Команда Valve сама будет рассматривать каждую заявку и устанавливать игру. Так компания сможет быть уверена, что проект соответствует описанию, не содержит вредоносного программного обеспечения и не создаётся с целью мошенничества.</p>', '8.jpg', '2017-10-23 20:55:10'),
(16, 5, 1, 1, 0, 'Вернётся ли жанр стратегии в игровую индустрию', '<p>Редактор Official Xbox Magazine Эдвин-Эванс Тирлвелл опубликовал в издании PC Gamer материал о спаде популярности стратегий в реальном времени и преимуществах MOBA.</p>\r\n\r\n<p>Редакция рубрики «Рынок игр» публикует перевод материала.</p>\r\n\r\n<p>Разговоры о смерти игрового жанра всегда звучат несколько нелепо, но стратегии в реальном времени в их традиционном понимании определенно переживают не лучшие времена. Если представить, что жанр участвует в deathmatch, то бой уже приближается к концу, а все его ресурсы выкачаны, ключевые базы захвачены, истощенные войска разбросаны по всей карте.</p>\r\n\r\n<p>Оплотом успеха, несмотря на меняющийся рынок, остается серия StarCraft. По-прежнему находят преданную аудиторию отличные игры Company of Heroes и Dawn of War от ветеранов жанра Relic. Недавно вышедшая Homeworld кажется особенной — возможно, из-за того, что у нее нет конкурентов среди современных игр. В остальном жанр стратегий в реальном времени лежит в руинах. В 2013 году создавшая Command & Conquer: Generals студия Victory Games закрылась, а разработку второй части игры отменили. Работу над новой игрой серии Age of Empires Microsoft приостановила ещё в 2009 году.</p>\r\n\r\n<p>«Да, RTS в безвыходном положении. StarCraft, несомненно, задает тон: у нее просто нет конкурентов того же уровня. Никто больше не согласится тратить 40–60 миллионов долларов на разработку стратегии в реальном времени, даже пару миллионов найти сложно. Возможно, я не вполне честен: когда Ensemble стояла на грани закрытия, мы бросили все ресурсы на разработку Halo Wars. Но над ней четыре года работали 100 человек. Для сравнения, в BonusXP платную стратегию Servo разрабатывали всего 12–13 сотрудников чуть больше года», — рассказывает Дэвид Поттингер, генеральный директор BonusXP и ведущий программист Ensemble Studios, выпустившей Age of Empires.</p>\r\n\r\n<p>Технический директор Uber Entertainment Джон Камс соглашается с тем, что золотой век высокобюджетных RTS прошёл: «С точки зрения бизнеса для стратегий реального времени ещё есть ниша. Но жанр словно бы растерял базу своих пользователей, поэтому мало какой крупный издатель станет финансировать такие разработки». Джон был геймдизайнером игр серии Command & Conquer в Westwood Interactive и Electronic Arts, а позже работал над Supreme Commander в Gas Powered Games.</p>\r\nБитва за ресурсы\r\n\r\n<p>В свете происходящих перемен Uber решила выложить на Kickstarter игру Planetary Annihilation, наследницу Total Annihilation, вышедшей в 1997 году. Planetary Annihilation собрала с помощью краудфандинга два миллиона долларов: пожалуй, это подтверждает, что стратегии реального времени, по крайней мере классические, все еще вызывают массовый интерес. Но следующая стратегия от Uber — Human Resources — не получила достаточной поддержки, и ее разработку прекратили, не дожидаясь завершения кампании на Kickstarter. «Думаю, можно выпускать не больше одной успешной RTS в год, а на данный момент преимущество принадлежит серии Total War», — говорит Камс.</p>\r\n\r\n<p>Правда ли стратегии реального времени терпят крах или это просто болезнь роста? Феноменальную популярность Total War можно объяснить тем, что в ней объединены пошаговое управление страной и контроль над войсками на поле боя. По словам Камса, это показывает, как жанр эволюционировал, чтобы выжить: «Когда я начинал карьеру, в игровой индустрии было три крупных игрока: Westwood с Command & Conquer, Blizzard с Warcraft и StarCraft, и Ensemble с Age of Empires». А теперь RTS смешались с RPG и породили игры MOBA. Кроме того, некоторые элементы RTS встречаются в жанре survival. А игры tower defense вообще появились из модификаций для RTS».</p>\r\n\r\n<p>«Planetary Annihilation не слишком отличается по геймплею от Total Annihilation, вышедшей 20 лет назад. Конечно, мы немного разнообразили игру сферическими планетами и перемещением войск по произвольной галактической карте, но это не меняет ее суть. Индустрия уже несколько десятков лет пытается улучшить традиционную механику RTS и достигла в этом определённого успеха, но не придумала ничего новаторского. Именно поэтому сейчас так популярно смешение жанров», — считает Камс.</p>\r\n\r\n<p>«Традиционные стратегии в реальном времени сейчас в дефиците, но они эволюционировали, приняли множество форм и разнообразили рынок, пусть даже отдельные игры не приносят такой прибыли, как раньше. Сейчас есть два вида RTS-игр, которые непросто сравнивать друг с другом. Есть игры, которые остаются верными старой модели. В них тонны контента, это эффектные серьёзные проекты, которые претендуют на звание нового StarCraft. Я не вижу в таких играх чего-то нового», — говорит Дэвид Поттингер.</p>\r\n\r\n<p>«С другой стороны, есть экспериментальные игры меньшего масштаба. Например, в Servo мы взяли и смешали RPG и RTS. Игрок может создавать собственных гигантских роботов, которые выступают в той же роли, что и герои в Warcraft III. До сих пор не уверен, как это будет работать, но всегда интересно пробовать что-то новое. Есть игры вроде Offworld Trading Company от Сорена Джонсона и команды Mohawk — в ней даже нет сражений, это нечто совершенно необычное. Бюджет таких игр намного меньше, так что вы не увидите в них потрясающих трёхчасовых кат-сцен. Но это неплохо, если они остаются интересными и эффектными».</p> \r\nЭффект MOBA\r\n\r\n<p>После завершения работы над Supreme Commander Камс перешёл на должность главного дизайнера первой коммерческой MOBA-игры Demigod от компании Stardock. Герои в Demigod — ходячие крепости, которым помогают управляемые искусственным интеллектом солдаты. Жанр MOBA считается преемником стратегий реального времени, потому что появился из модификации для Warcraft III. С тех пор многие разработчики, включая Blizzard, начали создавать собственные MOBA. Давайте попробуем разобраться, как MOBA удалось затмить своего предшественника.</p>\r\n\r\n<p>Креативный директор компании Petroglyph Джо Бостик работает над стратегиями реального времени уже больше 20 лет. В 1991 году он участвовал в разработке Dune 2. Успех жанра MOBA, по его словам, легко объясним: индустрия в последнее время склоняется к созданию менее требовательных небольших стратегий. «Играть в RTS намного сложнее, чем в MOBA: нужно больше думать, планировать на много ходов вперёд. Дело в самой сути стратегий реального времени: игрок постоянно должен принимать экономические и тактические решения, и иногда проходит много времени, прежде чем он увидит результат своих действий. Партия в RTS может длиться больше часа, что требует от игрока определённой самоотдачи», — рассказывает Джо.</p>\r\n\r\n<p>«Кроме того, в стратегиях в реальном времени нужно быть мультизадачным. Игрок должен одновременно контролировать производство зданий и солдат, сражения и разведку. Далеко не каждый человек способен комфортно выдерживать такой уровень стресса. Индустрия фокусируется скорее на коротких игровых сессиях и более очевидных механиках. Следить за происходящим вокруг намного проще, когда управляешь единственным персонажем, поэтому геймплей в MOBA-играх можно делать более интересным и динамичным». А за динамичными играми интереснее наблюдать на Twitch или на YouTube.</p>\r\n\r\n<p>Брэд Уордел, исполнительный директор компании и Stardock и геймдизайнер Galactic Civilizations, говорит, что развитие MOBA можно объяснить ограничениями «железа», которые и помешали эволюции RTS. Основное внимание уделяется небольшим группам центральных персонажей, которым помогает толпа пехотинцев. Благодаря этому разработчикам MOBA намного проще создавать красивые и динамичные игры, с которыми современные RTS просто не могут соперничать.</p>\r\n\r\n<p>«Если поставить задачу сделать красивую игру, работающую на DirectX 9, которая могла бы запускаться на 32-битных системах с одноядерным процессором и при этом не тормозила, вам придётся уменьшить количество объектов на экране. Возьмём для примера Demigod: она была построена на движке Supreme Commander: Forged Alliance. Чтобы игра соответствовала визуальным стандартам качества, нам пришлось уменьшить размеры карт и количество юнитов. Всем приходится идти на жертвы: либо много некачественных юнитов, которых к концу игры становится всё больше, либо несколько хорошо проработанных персонажей. Можно сказать, что именно поэтому популярность MOBA была неизбежна», — рассказывает Уордел. \r\nFree-to-play</p>\r\n\r\n<p>MOBA-игры также отлично подходят под модель распространения free-to-play. Это идеальные платформы для микропокупок вещей для персонажей, потому что игроки неизбежно привыкают к конкретным героям. Сами игры бесплатны, поэтому они привлекают широкую аудиторию. Согласно докладу EEDAR, сделанному в марте 2015 года, League of Legends и Dota 2 получили невероятную прибыль только за счет продажи внутриигровых украшений. Можно предположить, что игроки RTS не столь восприимчивы к искушениям, особенно если внутриигровые покупки способны хоть как-то менять баланс сил на карте.</p>\r\n\r\n<p>«Пользователи стратегий реального времени хотят играть в максимально честные и сбалансированные игры. Они не любят сюрпризов и хотят, чтобы исход партий решали только навыки соперников. А бесплатные игры вознаграждают тех игроков, которые просто проводят в игре больше времени, ну или вкладывают в неё больше наличных. Такой подход плохо подходит стратегиям реального времени», — говорит Дэвид Поттингер.</p>\r\n\r\n<p>Один из печальных результатов падения жанра RTS и восхода MOBA — вымирание одиночного режима в стратегиях. Полноценным историям с сюжетом и роликами многие разработчики предпочитают бессмысленные и часто бестолковые режимы сражений с искусственным интеллектом.</p>\r\n\r\n<p>Джо Бостик считает, что такое поведение недальновидно: «Битва с реальным противником вызывает кучу стресса, и не все игроки любят PvP: многие предпочитают играть против компьютера. Как раз для таких людей и существуют режимы кампаний. Среди разработчиков нет единого мнения, но мне кажется, что простые сражения с искусственным интеллектом не могут быть полноценной заменой для кампаний. Особенно в платных играх, а стратегии реального времени обычно платные».</p>\r\n\r\n<p>Камс соглашается с тем, что большинство игроков всё же предпочитают кампании обычным боям против искусственного интеллекта или других людей. Но расходы на их разработку далеко не всегда способны себя оправдать. «Разработка кампании занимает много времени и требует вложения кучи денег, особенно, если есть цель создать качественный продукт. Мало кто согласится вложить несколько миллионов долларов, чтобы создать историю для непопулярного жанра», — говорит Камс. </p>\r\nТехнологический скачок\r\n\r\n<p>У команд, разрабатывающих RTS, столько же проблем, сколько у их товарищей, работающих над экшнами. Им приходится бороться с новыми интерфейсами и системами управления: начиная от популярных какое-то время назад контроллеров, реагирующих на движение и голос, до взрывного роста популярности сенсорных планшетов и мобильных телефонов. Камс обращает внимание на то, что разработчики стратегий нашли свою нишу в создании игр жанра tower defense, в которые можно легко играть одной рукой.</p>\r\n\r\n<p>Уордел, однако, замечает, что истинные стратегии в реальном времени не могут ужиться с мобильными платформами. Их интерфейсы не подходят для игр, требующих быстрых и точных движений. В общем-то, существуют такие игры, как Offworld Trading Company, где вообще нет солдат и игроки используют силу рынка, стремятся обесценить активы своих соперников и в конце концов выкупить их. Offworld Trading Company удивительна сама по себе, и в неё можно довольно комфортно играть на планшете, потому что в ней не нужно управлять юнитами.</p>\r\n\r\n<p>Дэвид Поттингер не настолько пессимистичен. Он только что закончил работу над фэнтезийной стратегией реального времени для iOS — The Incorruptibles. «Этот проект многое для нас изменил. На BonusXP ничто не давило, от нас не ждали очередной Age of Empires, поэтому мы просто делали то, что считали интересным и правильным. Игра многое переняла от Age of Empires, но всё-таки мы создавали её для мобильных платформ, и она во многом отличается от предшественника. Игровые сессии намного короче, игрок управляет происходящим на более высоком уровне — но ему всё ещё приходится грамотно распределять еду, дерево и камень».</p>\r\n\r\n<p>Смогут ли разработчики стратегий снова ворваться на рынок, когда станут популярны устройства для погружения в виртуальную реальность? Камс думает, что надежда есть: «Мне кажется, виртуальная реальность в ближайшие несколько лет изменит все жанры индустрии. Я верю, что уже в 2020 году как минимум у 5% американцев будет в доме отдельная комната, предназначенная для VR-развлечений. Этого не избежать».</p>\r\n\r\n<p>Джо Бостиг не согласен с Камсом: он считает, что виртуальная реальность не будет настолько вездесущей. «Не думаю, что RTS удастся отойти от стандартной модели геймдизайна, где игрок выступает в роли главнокомандующего, наблюдая за полем боя с высоты птичьего полёта». Тем не менее он добавляет: «Такой вид геймплея не требует излишней вовлечённости в игровой мир. Однако в последнее время вышло несколько игр, которые позволяют игроку управлять сражением прямо с поля боя: например, Battlezone. Вот тут VR придётся очень кстати. Но таких игр немного: управлять множеством солдат с такой перспективы неудобно, а сражения с реальным оппонентом реализовать ещё труднее». </p>\r\nБудущее RTS\r\n\r\n<p>Брэд Уордел считает, что будущее стратегий в реальном времени зависит не от продвинутых интерфейсов, а от роста производственных мощностей современных компьютеров. «Компьютеры, оснащённые 64-битными системами и многоядерными процессорами, работающие с DirectX 12, становятся обыденностью — и в этом наш шанс». Пример отлично иллюстрирует игра Ashes of the Singularity от Stardock и Oxide Games, настоящий монстр среди RTS, в котором в бою могут участвовать одновременно тысячи юнитов.</p>\r\n\r\n<p>Уордел признаёт, что устройство Vive от Steam и HTC всё-таки может внести в жанр что-то новое. Шлем отслеживает перемещение игрока по комнате, а особые контроллеры позволяют управлять происходящим с помощью движения рук. «Просто представьте: вы ходите вокруг поля боя размером с комнату, жестами отдаёте приказы своим космическим кораблям и наблюдаете, как они сражаются с противником».</p>\r\n\r\n<p>По счастливой случайности, такая игра сейчас действительно создаётся, хотя пока и рано о чём-то говорить. Это MoonStrike, над которой работает Ли Перри, бывший дизайнер Gears of War и сооснователь компании Bitmonster. Перри считает, что последние неудачи стратегий не стоит принимать близко к сердцу: «Такое происходит практически с каждым жанром. Ветераны устанавливают собственный набор правил, на котором затем строятся остальные игры. В итоге получается, что все игры просто копируют механики друг у друга. Мне нравится наблюдать за тем, как геймдизайнеры отступают от устоявшихся норм, придумывают что-то новое, чтобы завлечь новых игроков и удивить старых».</p>\r\n\r\n<p>Перри считает, что стратегии в реальном времени сейчас ушли в тень MOBA и других жанров, но никогда не поздно вернуть их к жизни: ведь даже с базовым набором механик можно многое сделать. Перри сравнительно недавно работает с RTS, и его слова вдохновляют: «Как работают сражения, как создаются юниты, как местность влияет на происходящее, как игра начинается, какой у нее размах и структура кампаний, размеры технологического древа, какие тактические вопросы стоят перед игроком — ни один другой жанр не способен предоставить разработчику столько рычагов, на которые можно воздействовать». </p>', '9.jpg', '2017-10-23 16:40:50'),
(17, 1, 3, 1, 0, 'Nvidia - новая платформа для аппаратной работы нейросетей', '<p>Прямо сейчас в Кремниевой долине проходит GPU Technology Conference. Это важнейшее событие для всех тех, кто занимается технологиями параллельных вычислений, нейронными сетями и искусственным интеллектом. Текущий 2016 год особенный для этой конференции. То к чему готовились и шли долгое время именно сейчас приобретает законченные формы. Причем, как и предопределено развитием технологий, прорыв происходит сразу по всем направлениям:</p>\r\n\r\n<p>нейронные сети, построенные на обучении с подкреплением, берут следующую высоту после шахмат и побеждают человека в го, игру, которая превосходит шахматы по своей комбинаторной сложности;\r\n<p>беспилотные автомобили проходят проверку на дорогах и доказывают свою состоятельность;</p>\r\n<p>платформы искусственного интеллекта от IBM, Amazon, Google и Microsoft готовы для интеграции в реальный мир;</p>\r\n<p>виртуальная и дополненная реальность уже реализованы и готовы к масштабному внедрению от Oculus, HTC, Sony и Samsung;</p>\r\n<p>решения на базе HPC (High Performance Computing) интегрируются практически повсеместно.</p>\r\n\r\n\r\n<p>Пожалуй, главный из участников прорыва — это компания NVIDIA. Именно на ее железе работает большая часть всех революционных чудес.</p>\r\n\r\n<p>Вчера NVIDIA провела презентацию, показала оборудование и озвучила идеи, которые будут определять ход компьютерной революции как минимум ближайший год. Наверняка об этом будет много новостей и обзоров. Мне довелось присутствовать на этом мероприятии, пересказывать его полностью я не буду, но попробую отметить те детали, которые особенно отложились в памяти.</p>\r\n\r\n<p>Есть у компании NVIDIA со-основатель и в одном лице ее президент Дженсен Хуанг. Он и вел презентацию. Насколько это хороший оратор и яркий рассказчик вы можете судить по тому, что к концу презентации, я стал искренне переживать, что в моем любимом iMac стоит видеокарта от AMD. Вот она сила слова!</p>\r\n\r\n<p>Вообще же, я еще раз убедился в том, что компьютеры стали иными. Центральный процессор, еще недавно сердце компьютера, сейчас отошел на второй план. Навигация в интернете или работа с текстом — практически не требуют системных ресурсов. Даже самый слабый из современных процессоров с легкостью справляется с этим. А вот для всего действительно современного и интересного даже самый мощный процессор оказывается совершенно не пригоден. Создание графики в играх, моделирование виртуальной или дополнительной реальности, обработка изображений в реальном времени — все это возможно только на системах с параллельными вычислениями, когда счет количества параллельных потоков идет не на единицы, а на тысячи.</p>\r\n\r\n<p>Почти в самом начале выступления прозвучала фраза, которая сразу запомнилась: “уже никому не нужна реалистичность, нужна реальность”. Чтобы это продемонстрировать NVIDIA применила два козыря: интригующую тему и несомненного авторитета. Они смоделировали с абсолютной достоверностью восемь квадратных миль поверхности Марса с базой NASA и разной техникой поблизости. Опробовать это по прямой видеосвязи пригласили Стива Возняка. Было трогательно и забавно, когда Дженсен поблагодарил Стива за первый компьютер, за SSD и предложил, что дескать если тот и дальше хочет быть впереди, то компания NVIDIA готова устроить ему право быть первым космонавтом в полете на Марс в 2030 году. Стив радостно согласился. Дженсен, правда заметил, что NVIDIA готова оплатить билет только в один конец. Возняк не смутился и сказал, что Марс — это мечта и в один, так в один. Короче, сошлись на том, что ждать 2030 года не стоит и лучше, не откладывая, прямо сейчас опробовать Марс в исполнении NVIDIA, тем более, что обещана была “не реалистичность, а реальность”. Судя по реакции, реальность Марса Возняку понравилась. Он бодро гонял в шлеме Окулус на марсохроде и было видно, как ему хочет попробовать протаранить здания базы, видимо, чтобы проверить обещанную реальность ну уж совсем по полной.</p>\r\n\r\n<p>Оправдывая лозунг “не реалистичность, а реальность”, NVIDIA презентовала главного виновника торжества новую архитектуру Pascal. 15 миллиардов транзисторов на одном кристалле — это больше чем у любого другого чипа, созданного людьми ранее. Потрясающие характеристики можно посмотреть по ссылке.\r\nКогда была озвучена сумма, затраченная за три года разработок этой архитектуры, мне почему-то подумалось, что «Роснано» как-раз могло потянуть, но почему-то не потянуло, стало как-то грустно.</p>\r\n\r\n<p>Игровые видеокарты на Pascal появятся уже в этом году. Похоже, что их высокая производительность понадобится в первую очередь второму поколению систем виртуальной реальности. Сейчас для всех систем VR разрешение еще достаточно далеко от ретины. И Oculus, и HTC в своем первом релизе при выборе разрешения исходили из производительности существующих на сегодня видеокарт. Возможно Pascal исправит эту ситуацию.</p>\r\n\r\n<p>Показали модуль Tesla P100. Это первый продукт на базе новой архитектуры. P100 — ускоритель на базе которого можно строить различные вычислительные системы. Обещали, что в начале следующего года появятся сервера от всех крупных игроков.</p>\r\n\r\n<p>Сама NVIDIA показала, то чем заслуженно можно гордиться — суперкомпьютер DGX-1.</p>\r\n\r\n<p>Назначение этого чуда — глубокое обучение нейронных сетей. Суперкомпьютер состоит из восьми модулей P100 и имеет производительность 170 терафлопс. Цифра огромная, но большее впечатление производит не ее астрономическая величина, а сравнение с производительностью аналога предыдущего поколения. Удалось добиться, не предусмотренного никаким законом Мура, рекордного ускорения в 12 раз.</p>\r\n\r\n<p>DGX-1 позволяет тренировать нейронные сети, соответственно, в 12 раз быстрее, там где раньше требовалось несколько суток, теперь нужны часы.</p>\r\n\r\n<p>Стоит это чудо 129 000 долларов, но есть ощущение, что оно того стоит. На стенде NVIDIA, где можно было рассмотреть DGX-1 живьем (фото со стенда на КДПВ), вместе со мной был инженер из JP Morgan, который хорошо знает толк в таких вещах, я видел как искренне у него горели глаза.</p>\r\n\r\n<p>Но железо — это только пол-дела. Глубокое обучение в сочетании со сверточными сетями начали давать удивительные результаты. Уже сейчас можно говорить не об эволюции, а революции в машинном обучении. Но да я с этого начинал. Однако качественный скачок к сильному искусственному интеллекту еще только предстоит сделать. Что для этого надо и какое изменение вычислительной парадигмы нам предстоит я попробую описать несколько позже</p>', '10.jpg', '2017-10-24 12:30:30'),
(18, 5, 3, 1, 0, 'Intel - новый процессор для квантовых вычислений', '<p>Квантовые вычисления — будущее компьютерной техники. Причём не какое-то фантастическое, а вполне реальное, ведь в разработке решений для него принимают участие такие гиганты IT-индустрии, как IBM, Google, Microsoft и другие. Очередной шаг в этом направлении был сделан американской корпорацией Intel и нидерландским исследовательским центром QuTech. Накануне они объявили о поставке экспериментального 17-кубитного процессора, основанного на технологиях сверхпроводимости. Отмечается, что в чипе применена особая структура, повышающая выход годных кристаллов и увеличивающая их производительность.</p>\r\n\r\n<p>Как утверждается в выпущенном по данному случаю пресс-релизе, поставка первого процессора говорит об успешности сотрудничества Intel и QuTech в области создания компьютеров нового поколения и важности исследований в сфере материаловедения и разработки новых методов производства полупроводников.</p>\r\n\r\n<p>Впрочем, несмотря на все достижения, на пути к развёртыванию жизнеспособных крупномасштабных квантовых систем с требуемой точностью вычислений остаётся ещё много препятствий. Одна из главных проблем заключается в «хрупкости» кубитов — наименьших элементов для хранения данных в квантовых компьютерах. К потере информации может привести даже случайный шум; к тому же, работать они способны только при очень низких температурах, достигающих 20 милликельвин, что в 250 раз ниже температуры в открытом космосе.</p>\r\n\r\n<p>Специалисты из Intel и QuTech работают над преодолением перечисленных трудностей. В частности, в экспериментальном 17-кубитном процессоре размером с 10-рублёвую монету реализована новая архитектура, позволившая повысить надёжность, улучшить температурные характеристики и сократить уровень помех, возникающих при совместной работе кубитов. По сравнению с традиционными полупроводниковыми микросхемами новый чип обеспечивает в 10–100 раз большую  скорость ввода/вывода. Кроме того, благодаря сочетанию специальных техпроцессов, материалов и прочих решений он вмещает квантовые интегральные схемы существенно большего размера, чем элементы традиционных кремниевых процессоров. Комментируя получение упомянутой микросхемы, профессор Лео Ди Карло (Leo DiCarlo) из центра QuTech заявил, что это «позволит получить новый объём знаний в области квантовых вычислений, на базе которого будет построен следующий этап исследований».</p>', '11.jpg', '2017-10-24 13:20:20');
INSERT INTO `post_or_news` (`id`, `id_user`, `section`, `public_flag`, `news_or_forum`, `caption`, `description`, `image`, `date`) VALUES
(19, 3, 3, 1, 0, 'SSD скоро вытеснять HDD на рынке "2021 год"', '<p>Пока традиционные жёсткие диски (HDD) остаются доминирующим типом накопителей на компьютерном рынке. Но, согласно прогнозам Statista, в ближайшие годы картина изменится.\r\nСейчас наблюдается тенденция снижения спроса на винчестеры. Так, если в 2015 году объём продаж HDD составил около 470 млн единиц, то в 2016-м этот показатель опустился до уровня 425 млн штук.</p>\r\n\r\n<p>В текущем году, согласно прогнозам аналитиков, отгрузки жёстких дисков окажутся на отметке около 395 млн единиц. В 2018, 2019 и 2020 гг. этот показатель, по оценкам Statista, составит соответственно 370, 360 и 350 млн штук.</p>\r\n\r\n<p>В то же время спрос на твердотельные накопители (SSD) будет устойчиво расти. Если в 2015 году поставки таких устройств составляли 105 млн единиц, то в прошлом году отгрузки поднялись до 140 млн штук.</p>\r\n\r\n<p>В нынешнем году продажи SSD, по прогнозам, достигнут 190 млн единиц. В 2018, 2019 и 2020 гг. объём рынка, как ожидается, составит 235, 280 и 320 млн штук.</p>\r\n\r\n<p>2021 год, по мнению Statista, станет переломным: твердотельные накопители впервые обойдут по продажам стандартные жёсткие диски с результатом 360 млн штук против 330 млн единиц. </p>', '12.jpg', '2017-10-24 14:10:30'),
(20, 4, 4, 1, 0, 'Мысли вслух о TypeScript', '<p>Прошло уже некоторое время, как я впервые познакомился и подружился с TypeScript. В те времена версия еще не перевалила за единицу. А недавно вышел релиз 1.7. За это время мы привыкли друг к другу и пережили много успехов и разочарований. Мне хочется немного поделиться своими впечатлениями и размышлениями по поводу этого диалекта JavaScript как самостоятельного языка. Идея подобного поста возникла у меня спонтанно при обсуждении очередного холивара с коллегами.</p>\r\n\r\n<p>Итак, что же такое собственно TypeScript — наверно уже ни для кого не секрет. Но все же, хочу упомянуть, что это попытка Microsoft принести в JavaScript статическую типизацию. Примеры кода и задачи, которые он позволяет решать, можно посмотреть на официальном сайте или здесь на хабре, благо статей написано уже не мало. На хабре уже есть статья подобного рода TypeScript: общие впечатления, поэтому, чтобы не повторяться, я решил выделить плюсы и минусы работы с языком, опираясь на свой личный опыт. Вспомнить и перечислить плюсы и минусы языка оказалось довольно непросто.</p>\r\n\r\n\r\nПопулярность языка\r\n\r\n<p>Проект TypeScript создан компанией Microsoft. Фактически его создателем является Аннерс Хейлсберг. Практически с самого начала TypeScript стал быстро набирать популярность в силу своей гибкости и производительности. Немало проектов, которые были написаны на JavaScript, стали переноситься на TypeScript. Рост интереса к этому языка вызван еще и тем, что ряд идей, которые в нем реализованы, в последующем стали частью нового стандарта JavaScript. Все больше проектов переписывается на этом языке, включая такие крупные как Angular 2.0 и vscode.</p>\r\n\r\nЦитаты авторитетных людей\r\n\r\n<p>TypeScript, возможно, один из лучших JavaScript языков на фронтенде. Код, который он генерирует, выглядит наиболее привлекательно. И я думаю, что он способен снять нагрузку со стандарта ECMAScript по реализации таких вещей, как декларации и классы. Андерс показал, что этот функционал хорошо поддерживается препроцессором, поэтому нет необходимости изменять основной язык.</p>\r\n\r\n<p>Я считаю, что свободная типизация в JavaScript — это одно из достоинств языка и проверка типов переоценена. TypeScript добавляет удобства слишком дорогой ценой. И эта не та цена, за которую я готов платить.﻿ </p>\r\n\r\n<p>Дуглас Крокфорд — создатель JSLint. Оригинал</p>\r\n\r\n<p>Для пользователей Visual Studio — TypeScript довольно хороший инструмент для разработки, и к тому же он отлично соответствует стандарту ES6. Я бы мог больше рассказать об этом языке, но не вижу смысла сравнивать его с Dart.</p>\r\n\r\n<p>Брендан Айк — основатель JavaScript. Оригинал</p>\r\n\r\n<p>Я огромный поклонник CoffeeScript хотя это и другой язык с самостоятельным синтаксисом. Что мне нравится в TypeScript — так это то, что статическая типизация позволяет обеспечить процесс компиляции с предупреждениями, умный рефакторинг кода. В дополнение к этому вы получаете легкую навигацию по коду. В текущей версии CoffeScript вы не получите таких возможностей.</p>\r\n\r\n<p>Скотт Хансельман — евангелист Microsoft. Оригинал</p>\r\n\r\n\r\nПлюсы\r\n\r\n<p>О плюсах TypeScript написано довольно много. Поэтому постараемся тезисно отметить его преимущества:</p>\r\n\r\n<p>Поддержка многими популярными IDE: \r\nTypeScript for Visual Studio\r\nVisual Studio Code\r\nWebStorm\r\nSublime Text\r\nEclipse</p>\r\n\r\n<p>TypeScript — строго типизированный (опционально!) и компилируемый в JavaScript язык. Проще для освоения Java и C# программистами.\r\nTypeScript реализует многие концепции ООП, такие как наследование, полиморфизм, инкапсуляция и модификаторы доступа. В нем есть классы, интерфейсы и (даже!) абстрактные классы.\r\nПотенциал языка позволяет быстрее и проще писать сложные комплексные решения, которые легче развивать и тестировать в дальнейшем, чем на стандартном JavaScript.\r\nTypeScript — надмножество JavaScript, поэтому любой код на JavaScript будет выполнен и в TypeScript. Это, на мой взгляд, его главное преимущество перед конкурентами — например, Dart от компании Google, который является кардинально переработанным языком из Javascript. Есть статья по переводу проекта на Javascript в TypeScript</p>\r\n\r\n\r\nМинусы\r\n\r\n<p>Как мне кажется, что в большинстве случаев TypeScript хвалят. Поэтому мне хотелось написать свой пост о том, что же не так в Typescript. И как оказалось, найти минусы было довольно не просто.</p>\r\n\r\n<p>В процессе разработки имеем дело с файлами *.ts, *.d.ts, *.map, *.js. Слишком много дополнительных файлов, что бывает неудобно, если ваш проект небольшой.\r\nНе все браузеры поддерживают отладку TypeScript в консоли без лишних настроек.\r\nМножество нетривиальных классов. Чтобы писать код, опираясь на классы, приходится держать в голове какое свойство где находится. Например вместо одного класса Event существуют еще такие как MouseEvent, TouchEvent, KeyboardEvent и другие...\r\nНеявная статическая типизация. Всегда можно описать тип как any, что по факту отключит приведение к конкретному типу этой переменной.\r\nЭто транспайлер, что подразумевает, что мы должны всегда иметь под рукой tsc\r\nd.ts декларации поддерживаются сообществом DefinitelyTyped и часто не соответствуют текущей версии библиотеки. Либо не учитывают сложных вариантов (generic-функции, возвращаемые значения нескольких типов)</p>\r\n\r\n\r\nНемного о статической типизации\r\n\r\n<p>В жизни каждого разработчика бывает время, когда он пишет код в свое удовольствие. Будь это домашний проект, или работа в команде над проектом, который только начали писать с нуля. Это один из прекрасных моментов, когда не приходится много думать о конфликтах в коде с коллегами и искать ошибки. Но проект растет, обрастает новым функционалом и багами, связанными в том числе и с типами, если вы пишете свой код на динамически типизированном языке, коим является JavaScript. </p>\r\n\r\n<p>Какое может быть решение в этом случае? Писать тесты!</p>\r\n\r\n<p>Но согласитесь, зачем проверять то, с чем чем хорошо может справиться машина еще на стадии компиляции? Языки со статической типизацией избавляют нас от излишнего написания дополнительных тестов, которые связаны с ошибками в типах. Поэтому TypeScript имеет большое преимущество перед JavaScript, если мы не игнорируем типы.</p>\r\n\r\nРассмотрим простой пример\r\n\r\n<p>У нас есть функция, которая умеет складывает два числа:\r\n\r\nfunction sum(a, b) {\r\n  return a + b;\r\n}\r\n</p>\r\n\r\n<p>Ваш заказчик предложил реализовать веб форму, в которой бы пользователь мог вводить складываемые числа:</p>\r\n\r\nvar result = sum(\r\n  document.getElementById("input1").value,\r\n  document.getElementById("input2").value,\r\n)\r\n\r\ndocument.getElementById("result").innerText = result;\r\n\r\n\r\nПишем в наши поля ввода два числа, 2 и 3 и проверяем работу нашей функции:\r\n\r\n23\r\n</p>\r\n\r\n<p>Результат получился довольно неожиданный. Всё дело в том, что поле value у html-тега input возвращает результат типа «string» и JavaScript склеивает две строки «1» и «2» вместо того, чтобы сложить эти числа.</p>\r\n\r\n<p>Пример, конечно довольно простой, но в реальной жизни ошибки могут быть и сложнее, и их бывает довольно трудно заметить на стадии разработки.</p>\r\n\r\n<p>Решение подобной задачи довольно легко решается с помощью TypeScript:\r\n</p>\r\n<p>\r\nfunction sum(a: number, b: number): number {\r\n  return a + b;\r\n}\r\n\r\nsum(2, 3);   // Ok\r\nsum(2, "3"); // Error!</p>\r\n\r\n\r\n<p>Уже на этапе компиляции мы смогли обнаружить ошибку. Тратить силы лучше на разработку, а не на поиск ошибки и написания дополнительных тестов.</p>\r\n\r\nВывод\r\n\r\n<p>Когда я думал над плюсами и минусами разработки на TypeScript, выделить минусы оказалось не просто. TypeScript больше оправдывает себя в крупных проектах. Это связано с тем, что разработка на нем занимает больше времени чем на JavaScript, из-за того что приходится помимо методов и классов описывать и их декларации. Но тем не менее, пока в JavaScript нет статической типизации, TypeScript является отличной альтернативой. </p>\r\n\r\n<p>P.S. Целью моей статьи было разобраться в достоинствах и недостатках TypeScript и скорее всего я что-то упустил. Поэтому буду рад любым комментариям по существу.</p>', 'typescript.png', '2017-10-30 12:22:36'),
(21, 4, 4, 1, 0, 'Знакомство с CoffeeScript', '<p>Статья представляет собой не исчерпывающее описание языка программирования CoffeeScript, а именно знакомство, обзор некоторых интересных возможностей. Целевая аудитория — те, кто еще не смотрел в сторону CoffeeScript, но так или иначе используют JavaScript в своих проектах. </p>\r\n\r\n<p>CoffeeScript — это маленький язык, который транслируется в JavaScript. Его документация умещается на одной странице — coffeescript.org и отличается компактностью и наглядностью. Я даже сомневался в необходимости данной статьи, когда есть такое классное описание «от производителя», но все же рискнул расставить акценты и прояснить некоторые детали. </p>\r\n\r\nВведение\r\n\r\n<p>Если копнуть немного истории, то с 2009-го года язык писался на Ruby, с 2010 — он пишется на самом же CoffeeScript. \r\nИ в Ruby on Rails, начиная с версии 3.1, он «заменил» JavaScript.</p>\r\n\r\n<p>По сути CoffeeScript просто синтаксический сахар над JavaScript. А значит, его ценность в том, что он позволяет нагляднее выражать свои мысли и понимать чужие. </p>\r\n\r\n<p>JavaScript (читай ECMAScript), конечно, тоже не стоит на месте, развивается. В том числе перенимая некоторые идеи из CoffeeScript. Но если говорить про кросс-браузерный JavaScript, то лично у меня большие подозрения, что светлое будущее с продвинутым JavaScript наступит скоро. А CoffeeScript уже сейчас позволяет наслаждаться плодами технологического прогресса.</p>\r\n\r\n<p>В этом ключе нельзя не упомянуть TypeScript, в определенном смысле, конкурента CoffeeScript. Он позиционируется, как надмножество JavaScript, добавляя новые фичи в язык, во многом отражая будущее JavaScript. С этой позиции он интереснее. \r\nНо у CoffeeScript, есть преимущество, что ему не нужно сохранять совместимость с JavaScript, что, по-моему, дает больше свободы и позволяет сделать язык более выразительным. Так что, как минимум одна заслуживающая внимания альтернатива CoffeeScript есть. Но вернемся к теме.</p>\r\n\r\nТрансляция кода\r\n\r\n<p>Хорошо, как пользоваться этим вашим CoffeeScript? \r\nУдобнее всего, на мой взгляд, работать с ним, как с модулем node.js. Ставится он проще простого: \r\nnpm install -g coffee-script</p>\r\n\r\n<p>Создаем две папки, для определенности назовем их lib и src.\r\nСоздаем файл src/helloWorld.coffee и напишем, что нибудь на CoffeeScript. Например:\r\nconsole.log(''Hello world'')</p>\r\n\r\n<p>После этого запускаем транслятор:\r\ncoffee --compile --output lib/ src/ \r\nВ итоге в папке lib будет лежать файл helloWorld.js, готовый к выполнению. \r\nКонечно, на каждый чих запускать транслятор не интересно. Запуск команды \r\ncoffee -o lib/ -cw src/ \r\nзаставляет следить за всеми изменениями файлов в папке src и самостоятельно транслировать их в JavaScript-код.</p>\r\n\r\n<p>Синтаксис</p>\r\n\r\n<p>Функции</p>\r\n\r\n<p>Перейдем к самому языку. Напишем простенький код на CoffeeScript:\r\n<pre>square = (x) -> x * x\r\ncube   = (x) -> square(x) * x</pre></p>\r\n\r\n<p><pre>Его JavaScript-эквивалент:\r\n(function() {\r\n	\r\nvar cube, square;\r\n\r\nsquare = function(x) {\r\n  return x * x;\r\n};\r\n\r\ncube = function(x) {\r\n  return square(x) * x;\r\n};\r\n\r\n}).call(this);</pre></p>\r\n\r\n<p>Здесь мы создаем две функции, вычисляющие квадрат и куб числа соответственно.</p>\r\n\r\n<p>Первым делом обратим внимание, что весь код спрятан внутри анонимной функции, которую мы сразу же вызываем.\r\nЭтот прием позволяет прятать все локальные переменные внутри функции, не заботясь о том, что они будут засорять глобальную область видимости. Ниже в статье мы будем опускать эту функцию для наглядности.</p>\r\n\r\n<p>Далее обратим внимание, что объявления всех локальных переменных var cube, square вынесено в начало. Что защищает от распространенной ошибки, когда переменная не с того, не с сего стала глобальной из-за того, что банально забыли добавить объявление var. </p>\r\n\r\n<p>Стрелочка -> заменяет слово function.\r\nИ еще обратите внимание, что нет необходимости добавлять слово return. Оно добавляется автоматически к последнему выражению в функции.</p>\r\n\r\nЗначения параметров по умолчанию\r\n\r\n<p>CoffeeScript добавляет значения по умолчанию для параметров функций, чего нет в JavaScript.</p>\r\n\r\n<p><pre>Пример на CoffeeScript:\r\nfill = (container, liquid = "coffee") ->\r\n  "Filling the #{container} with #{liquid}..."</p>\r\n\r\n<p>Эквивалент на JavaScript:\r\nvar fill;</p>\r\n\r\nfill = function(container, liquid) {\r\n  if (liquid == null) {\r\n    liquid = "coffee";\r\n  }\r\n  return "Filling the " + container + " with " + liquid + "...";\r\n};</pre></p>\r\n\r\n<p>JavaScript-реализация сводится проверке параметра liquid на равенство null или undefined.\r\nДругая деталь, которую иллюстрирует пример — в качестве выделения блоков используются не фигурные скобки, а отступы, как в Питоне.</p>\r\n\r\nИтерация свойств объекта\r\n\r\n<p>Другая вещь, которая раздражает в JavaScript — очень многословная итерация по свойствам объектов.\r\nДело в том, что в большинстве случаев при обходе объекта интересуют его собственные свойства, а не свойства прототипа.\r\nА делать каждый раз for а в нем сразу же проверку hasOwnProperty немного утомляет.\r\nРешение же в стиле jQuery.each() никто не запрещал, но оно уступает по эффективности дедовскому for. </p>\r\n\r\n<p><pre>Смотрим, как сделать круто:\r\nyearsOld = max: 10, ida: 9, tim: 11\r\n\r\nfor own child, age of yearsOld\r\n  console.log "#{child} is #{age}"  \r\n\r\n<p>Эквивалент:\r\nvar age, child,\r\n  __hasProp = {}.hasOwnProperty;\r\n\r\nfor (child in yearsOld) {\r\n  if (!__hasProp.call(yearsOld, child)) continue;\r\n  age = yearsOld[child];\r\n  console.log("" + child + " is " + age);\r\n}</pre></p>\r\n\r\nПриятные мелочи\r\n\r\n<p>В JavaScript оператор == ведет себя мягко говоря странно. Гораздо безопаснее использовать ===. Поэтому CoffeeScript преобразует оператор == в ===, оберегая начинающих разработчиков от подстерегающих в JavaScript ловушек. Хотя приходит в голову один случай, когда оператор == все-таки полезен. Это сравнение с null, которое позволяет проверить null и undefined одним махом. В CoffeeScript для этого предназначен оператор ?. <pre>Рассмотрим пример:\r\nalert "I knew it!" if elvis?\r\n\r\n<p>И на выходе:\r\nif (typeof elvis !== "undefined" && elvis !== null) {\r\n  alert("I knew it!");\r\n}   </pre></p>\r\n\r\nКлассы\r\n\r\n<p>Переходим к классам. На всякий случай уточним, что классами будем называть функции-конструкторы объектов.\r\n\r\n<p><pre>Рассмотрим пример:\r\nclass Animal\r\n  constructor: (@name) ->\r\n\r\n  move: (meters) ->\r\n    alert @name + " moved #{meters}m."\r\n\r\nclass Snake extends Animal\r\n  move: ->\r\n    alert "Slithering..."\r\n    super 5\r\n\r\nclass Horse extends Animal\r\n  move: ->\r\n    alert "Galloping..."\r\n    super 45\r\n\r\nsam = new Snake "Sammy the Python"\r\ntom = new Horse "Tommy the Palomino"\r\n\r\nsam.move()\r\ntom.move()</pre></p>\r\n\r\n<p>Даже интуитивно можно догадаться, что происходит. Описаны базовый класс Animal и два его наследника: Snake и Horse.\r\nОбратим внимание на класс Animal. Запись @name в параметрах конструктора — это удобное сокращение, которое определяет свойство класса name и автоматически присваивает ему значение, передаваемое в конструкторе. В методе move запись @name — сокращение от this.name.</p>\r\n\r\n<p>В методах move в подклассах super вызывает родительский метод с тем же названием. Ведь, и правда, когда мы находимся в дочернем классе, ссылка на родителя бывает нужна только для того, чтобы обратиться к одноименному методу родительского класса. Другие случаи даже в голову не приходят. </p>\r\n\r\n<p>Не буду томить и, наконец-то, перейдем к js-варианту наших классов.\r\n<pre>var Animal, Horse, Snake, sam, tom, _ref, _ref1,\r\n  __hasProp = {}.hasOwnProperty,\r\n  __extends = function(child, parent) { for (var key in parent) { \r\nif (__hasProp.call(parent, key)) child[key] = parent[key]; } \r\nfunction ctor() { this.constructor = child; \r\n} ctor.prototype = parent.prototype; child.prototype = new ctor(); \r\nchild.__super__ = parent.prototype; return child; };\r\n\r\nAnimal = (function() {\r\n  function Animal(name) {\r\n    this.name = name;\r\n  }\r\n\r\n  Animal.prototype.move = function(meters) {\r\n    return alert(this.name + (" moved " + meters + "m."));\r\n  };\r\n\r\n  return Animal;\r\n\r\n})();\r\n\r\nSnake = (function(_super) {\r\n  __extends(Snake, _super);\r\n\r\n  function Snake() {\r\n    _ref = Snake.__super__.constructor.apply(this, arguments);\r\n    return _ref;\r\n  }\r\n\r\n  Snake.prototype.move = function() {\r\n    alert("Slithering...");\r\n    return Snake.__super__.move.call(this, 5);\r\n  };\r\n\r\n  return Snake;\r\n\r\n})(Animal);\r\n\r\nHorse = (function(_super) {\r\n  __extends(Horse, _super);\r\n\r\n  function Horse() {\r\n    _ref1 = Horse.__super__.constructor.apply(this, arguments);\r\n    return _ref1;\r\n  }\r\n\r\n  Horse.prototype.move = function() {\r\n    alert("Galloping...");\r\n    return Horse.__super__.move.call(this, 45);\r\n  };\r\n\r\n  return Horse;\r\n\r\n})(Animal);\r\n\r\nsam = new Snake("Sammy the Python");\r\n\r\ntom = new Horse("Tommy the Palomino");\r\n\r\nsam.move();\r\n\r\ntom.move();</pre></p>\r\n\r\n<p>В основе наследования лежит вариация классической функции extend.\r\nРеализация достаточно простая. Конечно, если сравнивать с другими JavaScript библиотеками, которые предоставляют удобную кросс-браузерную реализацию классов на чистом JavaScript. \r\nМинус навороченных библиотек в том, что не всегда легко разобраться, как они работают внутри. \r\nА функция extend очень хорошо описана во множестве источников, например, здесь javascript.ru/tutorial/object/inheritance#nasledovanie-na-klassah-funkciya-extend.</p>\r\n\r\nЭффективность\r\n\r\n<p>Еще достаточно важный критерий — эффективность генерируемого кода. Так вот, с этим все в порядке, никаких глупостей я не обнаружил. Функции как положено добавляются не как свойства класса, а в прототип. Также порадовало, что значение по умолчанию свойств класса тоже добавляются в прототип.</p>\r\n\r\n<p><pre>Рассмотрим очень простой класс:\r\nclass Foo\r\n  bar: 10</p>\r\n\r\n<p>На выходе имеем JavaScript:\r\nvar Foo;\r\n\r\nFoo = (function() {\r\n	function Foo() {}\r\n	Foo.prototype.bar = 10;\r\n	return Foo;\r\n})();</pre></p>\r\n\r\n<p>Здесь используется, так называемая асимметричность свойств объекта на чтение и на запись. \r\nВ реальной жизни значение свойства по умолчанию практически всегда выгодней добавлять в прототип объекта.\r\nПока нам не понадобится изменить это значение по умолчанию, мы не тратим лишнюю память для каждого объекта определенного класса.<pre> Но, допустим, мы решили изменить значение данного свойства так:\r\nobj = new Foo() \r\nobj.bar = 500</pre></p>\r\n\r\n<p>Здесь создается персональное свойство bar у объекта obj. При этом свойство bar прототипа объекта obj по-прежнему равно 10. Все безопасно и эффективно.</p>\r\n\r\n<p>Единственное, что может смущать в этом подходе, что при обращении к свойству, которое находится в прототипе, приходится продвигаться по цепочке прототипов. А это дается не бесплатно. Но на современных движках это не существенно, тем более на фоне радикальной оптимизации использования памяти, ну а старые IE-ки, в которых ощущалась деградация, постепенно уходят в небытие.</p>\r\n\r\nНазначение обработчиков событий\r\n\r\n<p>Другая крутая фича — назначение обработчиков событий для методов объектов. <pre>Пример:\r\nAccount = (customer, cart) ->\r\n  @customer = customer\r\n  @cart = cart\r\n\r\n  $(''.shopping_cart'').bind ''click'', (event) =>\r\n    @customer.purchase @cart</p>\r\n\r\n<p>Выдача:\r\nvar Account;\r\n\r\nAccount = function(customer, cart) {\r\n  var _this = this;\r\n\r\n  this.customer = customer;\r\n  this.cart = cart;\r\n  return $(''.shopping_cart'').bind(''click'', function(event) {\r\n    return _this.customer.purchase(_this.cart);\r\n  });\r\n};</pre></p>\r\n\r\n<p>Чтобы в качестве обработчика события указать метод этого же объекта на чистом JavaScript, приходится выкручиваться.\r\nОдин из самых распространенных способов — создание замыкания. В CoffeeScript этот костыль не нужен. Достаточно функцию обработчика указать не как ->, а =>. После этого this внутри обработчика будет ссылаться на базовый объект. </p>\r\n\r\nИнтеграция с чистым JavaScript\r\n\r\n<p>Если потребуется подключить чистый JavaScript-код, то это также просто сделать:<pre>\r\nhi = `function() {\r\n  return [document.title, "Hello JavaScript"].join(": ");\r\n}`\r\n\r\nНа выходе получаем:\r\nvar hi;\r\n\r\nhi = function() {\r\n  return [document.title, "Hello JavaScript"].join(": ");\r\n};</pre></p>\r\n\r\nМассивы\r\n\r\n<p>Ну и конечно, присутствует много фишек для работы с массивами и объектами. Для иллюстрации рассмотрим одну.\r\nНапример, пусть мы хотим получить массив кубов чисел от 1 до 5.</p>\r\n\r\n<p>В CoffeeScript достаточно написать:<pre>\r\ncubes = (Math.pow(num, 3) for num in [1..5])</p> \r\n\r\n<p>В многословном JavaScript получаем:\r\nvar cubes, num;\r\n\r\ncubes = (function() {\r\n  var _i, _results;\r\n  _results = [];\r\n  for (num = _i = 1; _i <= 5; num = ++_i) {\r\n      _results.push(Math.pow(num, 3));\r\n  }\r\n  return _results;\r\n})();</pre></p>\r\n\r\nЗаключение\r\n\r\n<p>Надеюсь, для знакомства должно хватить. Дальше добро пожаловать на coffeescript.org.</p>\r\n\r\n<p>Ну и как положено, несколько выводов:\r\nCoffeeScript увеличивает выразительность кода, упрощает и ускоряет как первоначальную разработку, так и дальнейшую поддержку кода.\r\nОбучение очень быстрое (мне хватило пару дней втянуться).\r\nУдобная поддержка со стороны WebStorm (Для других IDE тоже есть плагины, но про их качество ничего не могу сказать)\r\nБольшое community\r\nУберегает особенно начинающих разработчиков от многих ошибок.</p>\r\n\r\n<p>Главное — понимать, что генерирует CoffeeScript. Тогда он превращается из лишнего подозрительного слоя абстракции в мощный инструмент.</p>', 'coffeescript.jpg', '2017-10-31 14:14:05');

-- --------------------------------------------------------

--
-- Структура таблицы `rang`
--

CREATE TABLE `rang` (
  `id` int(11) NOT NULL COMMENT 'внешний ключ связи с юзером',
  `user` tinyint(1) NOT NULL COMMENT 'пользователь',
  `moderator_news` tinyint(1) NOT NULL COMMENT 'модератор новостей',
  `moderator_forum` int(11) NOT NULL COMMENT 'модератор форума',
  `administrator_news` tinyint(1) NOT NULL COMMENT 'администратор новостей',
  `administrator_forum` tinyint(1) NOT NULL COMMENT 'администратор форума',
  `chief_administrator` tinyint(1) NOT NULL COMMENT 'главный админ'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Таблица прав пользователей';

--
-- Дамп данных таблицы `rang`
--

INSERT INTO `rang` (`id`, `user`, `moderator_news`, `moderator_forum`, `administrator_news`, `administrator_forum`, `chief_administrator`) VALUES
(1, 1, 0, 0, 0, 0, 0),
(2, 1, 1, 0, 0, 0, 0),
(3, 1, 0, 1, 0, 0, 0),
(4, 1, 1, 0, 1, 0, 0),
(5, 1, 0, 1, 0, 1, 0),
(6, 1, 1, 1, 1, 1, 1);

-- --------------------------------------------------------

--
-- Структура таблицы `sections`
--

CREATE TABLE `sections` (
  `id` int(11) NOT NULL,
  `id_categories` int(11) NOT NULL,
  `name` varchar(255) NOT NULL,
  `icon` varchar(255) NOT NULL COMMENT 'Иконки',
  `folder_name` varchar(255) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `sections`
--

INSERT INTO `sections` (`id`, `id_categories`, `name`, `icon`, `folder_name`) VALUES
(1, 2, 'Игровые новости', '<span class="fa fa-gamepad">', 'game_news'),
(2, 2, 'Новости IT', '<span class="fa fa-desktop">', 'it_news'),
(3, 2, 'Новости железа', '<span class="fa fa-gears">', 'hard_news'),
(4, 2, 'Статьи', '<span class="fa fa-newspaper-o">', 'article');

-- --------------------------------------------------------

--
-- Структура таблицы `users`
--

CREATE TABLE `users` (
  `id` int(11) NOT NULL COMMENT 'номер пользователя',
  `rang` int(11) NOT NULL COMMENT 'номер записи с таблице прав',
  `ip` varchar(16) NOT NULL,
  `login` varchar(20) NOT NULL COMMENT 'логин пользователя',
  `password` varchar(20) NOT NULL COMMENT 'пароль пользователя',
  `mail` varchar(255) NOT NULL COMMENT 'комментарии пользователя',
  `name` varchar(20) NOT NULL COMMENT 'имя пользователя',
  `surname` varchar(20) NOT NULL COMMENT 'фамилия пользователя',
  `image` varchar(255) NOT NULL COMMENT 'фотография пользователя',
  `description` text NOT NULL COMMENT 'описаине пользователя',
  `interests` varchar(255) CHARACTER SET utf32 NOT NULL COMMENT 'хештеги'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Таблица информацмм о пользователях';

--
-- Дамп данных таблицы `users`
--

INSERT INTO `users` (`id`, `rang`, `ip`, `login`, `password`, `mail`, `name`, `surname`, `image`, `description`, `interests`) VALUES
(1, 6, '193.40.218.5', 'imxo', '123qwerty', 'lomovskoy.kirill@yandex.ru', 'Kirill', 'Lomovskoy', 'admin.png', 'Я администратор сайта', '#Прогр. #Игры #Java #PHP'),
(2, 5, '193.40.218.8', 'viwi', '123qwerty', 'viwi@gmail.com', 'Vika', 'Lomovskoya', 'viwi.png', 'Я администратор форума', '#Прогр. #Игры #PHP'),
(3, 4, '193.40.218.15', 'ololo', '123qwerty', 'ololo@rambler.ru', 'Oleg', 'Olegovich', 'oleg.png', 'Я администратор новостей', '#2ch #forch '),
(4, 3, '193.40.218.10', 'kun', '123qwerty', 'kun@gmail.com', 'Brain', 'Dikun', 'kun.png', 'Я модератор форума', '#manga #anime'),
(5, 2, '193.40.218.12', 'vadi', '123qwerty', 'vadi@yandex.ru', 'Vadim', 'Savitskiy', 'vadi.png', 'Я модератор новостей', '#meams'),
(6, 1, '193.40.218.5', 'user', '123qwerty', 'user@gmail.com', 'user', 'users', 'noimage.jpg', 'Я обычный пользователь', '');

--
-- Индексы сохранённых таблиц
--

--
-- Индексы таблицы `categories`
--
ALTER TABLE `categories`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `comments`
--
ALTER TABLE `comments`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `decoration`
--
ALTER TABLE `decoration`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `likes_comment`
--
ALTER TABLE `likes_comment`
  ADD UNIQUE KEY `uniqueIndexComment` (`id_user`,`id_comment`);

--
-- Индексы таблицы `likes_post`
--
ALTER TABLE `likes_post`
  ADD UNIQUE KEY `a1` (`id_user`,`id_post`);

--
-- Индексы таблицы `post_or_news`
--
ALTER TABLE `post_or_news`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `rang`
--
ALTER TABLE `rang`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `sections`
--
ALTER TABLE `sections`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `login` (`login`),
  ADD UNIQUE KEY `mail` (`mail`);

--
-- AUTO_INCREMENT для сохранённых таблиц
--

--
-- AUTO_INCREMENT для таблицы `categories`
--
ALTER TABLE `categories`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'номер категории', AUTO_INCREMENT=6;
--
-- AUTO_INCREMENT для таблицы `comments`
--
ALTER TABLE `comments`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'номер комментария', AUTO_INCREMENT=10;
--
-- AUTO_INCREMENT для таблицы `decoration`
--
ALTER TABLE `decoration`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=5;
--
-- AUTO_INCREMENT для таблицы `post_or_news`
--
ALTER TABLE `post_or_news`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'номер новости', AUTO_INCREMENT=22;
--
-- AUTO_INCREMENT для таблицы `rang`
--
ALTER TABLE `rang`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'внешний ключ связи с юзером', AUTO_INCREMENT=7;
--
-- AUTO_INCREMENT для таблицы `sections`
--
ALTER TABLE `sections`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=5;
--
-- AUTO_INCREMENT для таблицы `users`
--
ALTER TABLE `users`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'номер пользователя', AUTO_INCREMENT=7;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
